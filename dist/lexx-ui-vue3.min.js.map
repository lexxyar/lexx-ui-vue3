{"version":3,"file":"lexx-ui-vue3.min.js","sources":["../src/lib-components/definitions.ts","../src/lib-components/lxButton/lxButton.vue","../src/lib-components/lxCard/lxCard.vue","../src/lib-components/lxCard/lxCard.vue?vue&type=template&id=57fb28d8&lang.js","../src/lib-components/lxSidebar/lxSidebar.vue","../src/lib-components/lxSidebar/lxSidebar.vue?vue&type=template&id=57a0903f&lang.js","../src/lib-components/lxSidebar/lxSidebarItem.vue","../src/lib-components/lxSidebar/lxSidebarItem.vue?vue&type=template&id=74b2f265&lang.js","../src/lib-components/lxSidebar/lxSidebarDdItem.vue","../src/lib-components/lxSidebar/lxSidebarDdItem.vue?vue&type=template&id=78336f59&lang.js","../src/lib-components/lxNavbar/lxNavbar.vue","../src/lib-components/lxNavbar/lxNavbar.vue?vue&type=template&id=01efeae6&lang.js","../src/lib-components/lxNavbar/lxNavbarItem.vue","../src/lib-components/lxNavbar/lxNavbarItem.vue?vue&type=template&id=344cdbda&lang.js","../src/lib-components/lxNavbar/lxNavbarButton.vue","../src/lib-components/lxNavbar/lxNavbarButton.vue?vue&type=template&id=2384de5e&lang.js","../src/lib-components/lxDdMenu/lxDdMenu.vue","../src/lib-components/lxDdMenu/lxDdMenu.vue?vue&type=template&id=12c1e44a&lang.js","../src/lib-components/lxDdMenu/lxDdMenuItem.vue","../src/lib-components/lxDdMenu/lxDdMenuItem.vue?vue&type=template&id=683dd364&lang.js","../src/lib-components/lxTable/lxTable.vue","../src/lib-components/lxPagination/lxPagination.vue","../src/lib-components/lxPagination/lxPagination.vue?vue&type=template&id=724bff53&lang.js","../src/lib-components/lxInput/lxInput.vue","../src/lib-components/lxInput/lxInput.vue?vue&type=template&id=496763d2&lang.js","../src/lib-components/lxInput/components/lxSelectInputCheckmark.vue","../src/lib-components/lxInput/components/lxSelectInputCheckmark.vue?vue&type=template&id=700b42a7&lang.js","../src/lib-components/lxInput/lxSelectInput.vue","../src/lib-components/lxInput/lxSelectInput.vue?vue&type=template&id=e0af6824&lang.js","../src/lib-components/lxInput/lxFileInput.vue","../src/lib-components/lxInput/lxFileInput.vue?vue&type=template&id=72caf676&lang.js","../src/lib-components/lxInput/lxTextareaInput.vue","../src/lib-components/lxInput/lxTextareaInput.vue?vue&type=template&id=66211a66&lang.js","../src/lib-components/lxBadge/lxBadge.vue","../src/lib-components/lxBadge/lxBadge.vue?vue&type=template&id=6705e237&lang.js","../src/lib-components/lxPageTitle/lxPageTitle.vue","../src/lib-components/lxPageTitle/lxPageTitle.vue?vue&type=template&id=3c0050a4&lang.js","../src/lib-components/lxInput/lxCheckbox.vue","../src/lib-components/lxInput/lxCheckbox.vue?vue&type=template&id=45b50e23&lang.js","../src/lib-components/lxInput/lxToggle.vue","../src/lib-components/lxInput/lxToggle.vue?vue&type=template&id=9c54f74a&lang.js","../src/lib-components/lxModal/lxModal.vue","../src/lib-components/lxModal/lxModal.vue?vue&type=template&id=92ffdfd4&lang.js","../src/lib-components/lxInput/lxSearchHelp.vue","../src/entry.esm.ts","../src/entry.ts"],"sourcesContent":["export enum Styl {\n  primary = 'primary',\n  secondary = 'secondary',\n  success = 'success',\n  danger = 'danger',\n  info = 'info',\n  warning = 'warning',\n  dark = 'dark',\n  light = 'light'\n}\n\nexport enum Typ {\n  none = '',\n  flat = 'flat',\n  rounded = 'rounded',\n  pill = 'pill'\n}\n\nexport enum Size{\n  none='', md='md', lg='lg', sm='sm'\n}\n","<script lang=\"ts\">\nimport {defineComponent} from 'vue';\nimport {Size, Styl, Typ} from \"@/lib-components/definitions\";\n\nexport default defineComponent({\n  name: \"lxButton\",\n  props: {\n    styl: {\n      type: String as () => Styl,\n      validator: (value: Styl) => {\n        return [Styl.primary, Styl.secondary, Styl.success, Styl.danger, Styl.info,\n          Styl.warning, Styl.dark, Styl.light].indexOf(value) !== -1\n      },\n      default: Styl.primary,\n    },\n    typ: {\n      type: String as () => Typ,\n      validator: (value: Typ) => {\n        return [Typ.none, Typ.flat, Typ.rounded, Typ.pill].indexOf(value) !== -1\n      },\n      default: Typ.none,\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n    },\n    iconed: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    size: {\n      type: String as () => Size,\n      validator: (value: Size) => {\n        return [Size.none, Size.md, Size.lg, Size.sm].indexOf(value) !== -1\n      },\n      default: Size.none,\n    },\n    to: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(`btn-${this.styl}`)\n      css.push(this.typ !== '' ? `btn-${this.typ}` : '')\n      css.push(this.outline ? `btn-outline` : '')\n      css.push(this.iconed ? `btn-icon` : '')\n      css.push(this.disabled ? `btn-disabled` : '')\n      css.push(this.size !== '' ? `btn-${this.size}` : '')\n\n      return css.join(' ')\n    },\n  }\n})\n</script>\n\n<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\" class=\"btn\" :class=\"getCss()\" :disabled=\"disabled\">\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <button class=\"btn\" :class=\"getCss()\" :disabled=\"disabled\">\n      <slot/>\n    </button>\n  </template>\n</template>\n","<template>\r\n  <div class=\"max-w-2xl sm:px-6 lg:px-8\">\r\n    <div class=\"overflow-hidden shadow-md\" :class=\"dark?'text-gray-100':''\">\r\n\r\n      <div class=\"px-6 py-4 border-b font-bold uppercase\"\r\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\"\r\n           v-if=\"hasHeaderSlot()\">\r\n        <slot name=\"header\"/>\r\n      </div>\r\n\r\n      <div class=\"p-6 bg-white border-b\"\r\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\">\r\n        <slot></slot>\r\n      </div>\r\n\r\n      <div class=\"p-6 text-right\"\r\n           :class=\"dark?'bg-gray-800 border-gray-200':'bg-white border-gray-200'\"\r\n           v-if=\"hasFooterSlot()\">\r\n        <slot name=\"footer\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: \"lxCard\",\r\n  props: {\r\n    dark: {\r\n      type: Boolean,\r\n      default: false,\r\n    }\r\n  },\r\n  methods: {\r\n    hasHeaderSlot():boolean {\r\n      return !!this.$slots.header\r\n    },\r\n    hasFooterSlot():boolean {\r\n      return !!this.$slots.footer\r\n    },\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"max-w-2xl sm:px-6 lg:px-8\">\r\n    <div class=\"overflow-hidden shadow-md\" :class=\"dark?'text-gray-100':''\">\r\n\r\n      <div class=\"px-6 py-4 border-b font-bold uppercase\"\r\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\"\r\n           v-if=\"hasHeaderSlot()\">\r\n        <slot name=\"header\"/>\r\n      </div>\r\n\r\n      <div class=\"p-6 bg-white border-b\"\r\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\">\r\n        <slot></slot>\r\n      </div>\r\n\r\n      <div class=\"p-6 text-right\"\r\n           :class=\"dark?'bg-gray-800 border-gray-200':'bg-white border-gray-200'\"\r\n           v-if=\"hasFooterSlot()\">\r\n        <slot name=\"footer\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from 'vue'\r\n\r\nexport default defineComponent({\r\n  name: \"lxCard\",\r\n  props: {\r\n    dark: {\r\n      type: Boolean,\r\n      default: false,\r\n    }\r\n  },\r\n  methods: {\r\n    hasHeaderSlot():boolean {\r\n      return !!this.$slots.header\r\n    },\r\n    hasFooterSlot():boolean {\r\n      return !!this.$slots.footer\r\n    },\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <aside\r\n      @keydown.escape=\"window.innerWidth <= 1024 ? isSidebarOpen = false : ''\"\r\n      tabindex=\"-1\"\r\n      class=\"fixed inset-y-0 z-10 flex-shrink-0 w-64 bg-white border-r lg:static dark:border-indigo-800 dark:bg-darker focus:outline-none lx-sidebar\"\r\n      :class=\"{'-translate-x-full lg:translate-x-0 lg:w-20 md:w-5 lg:translate-x-5 sm:hidden lx-sidebar-closed': !isSidebarOpen}\">\r\n    <!-- sidebar header -->\r\n    <div class=\"flex items-center justify-between flex-shrink-0 p-2\"\r\n         :class=\"{'lg:justify-center': !isSidebarOpen}\"\r\n         v-if=\"hasBrandSlot()\"\r\n    >\r\n          <span class=\"p-2 text-xl font-semibold leading-8 tracking-wider uppercase whitespace-nowrap\">\r\n            <slot name=\"brand\"></slot>\r\n          </span>\r\n      <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md lg:hidden\">\r\n        <svg\r\n            class=\"w-6 h-6 text-gray-600\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n        >\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col h-full\">\r\n      <!-- Sidebar links -->\r\n      <nav aria-label=\"Main\" class=\"flex-1 px-2 py-4 pb-20 space-y-2 overflow-y-auto\">\r\n\r\n        <slot></slot>\r\n\r\n      </nav>\r\n\r\n      <!-- Sidebar footer -->\r\n      <slot name=\"footer\"></slot>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxSidebar\",\r\n  props: {\r\n    header: {\r\n      type: String\r\n    },\r\n    open: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return ({\r\n      isSidebarOpen: this.open,\r\n    })\r\n  },\r\n  methods: {\r\n    hasBrandSlot(){\r\n      return this.$slots.brand\r\n    },\r\n    onToggleSidebar(){\r\n      // console.log('lxSidebar', 'onToggleSidebar', !this.isSidebarOpen)\r\n      this.$emit('toggle', !this.isSidebarOpen)\r\n    }\r\n  },\r\n  emits: ['toggle'],\r\n  watch: {\r\n    isSidebarOpen(val) {\r\n      // console.log('lxSidebar', 'watch:isSidebarOpen', val)\r\n      this.$emit('toggle', val)\r\n    },\r\n    open(val){\r\n      // console.log('lxSidebar', 'watch:open', val)\r\n      this.isSidebarOpen = val\r\n    }\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <aside\r\n      @keydown.escape=\"window.innerWidth <= 1024 ? isSidebarOpen = false : ''\"\r\n      tabindex=\"-1\"\r\n      class=\"fixed inset-y-0 z-10 flex-shrink-0 w-64 bg-white border-r lg:static dark:border-indigo-800 dark:bg-darker focus:outline-none lx-sidebar\"\r\n      :class=\"{'-translate-x-full lg:translate-x-0 lg:w-20 md:w-5 lg:translate-x-5 sm:hidden lx-sidebar-closed': !isSidebarOpen}\">\r\n    <!-- sidebar header -->\r\n    <div class=\"flex items-center justify-between flex-shrink-0 p-2\"\r\n         :class=\"{'lg:justify-center': !isSidebarOpen}\"\r\n         v-if=\"hasBrandSlot()\"\r\n    >\r\n          <span class=\"p-2 text-xl font-semibold leading-8 tracking-wider uppercase whitespace-nowrap\">\r\n            <slot name=\"brand\"></slot>\r\n          </span>\r\n      <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md lg:hidden\">\r\n        <svg\r\n            class=\"w-6 h-6 text-gray-600\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n        >\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"flex flex-col h-full\">\r\n      <!-- Sidebar links -->\r\n      <nav aria-label=\"Main\" class=\"flex-1 px-2 py-4 pb-20 space-y-2 overflow-y-auto\">\r\n\r\n        <slot></slot>\r\n\r\n      </nav>\r\n\r\n      <!-- Sidebar footer -->\r\n      <slot name=\"footer\"></slot>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxSidebar\",\r\n  props: {\r\n    header: {\r\n      type: String\r\n    },\r\n    open: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return ({\r\n      isSidebarOpen: this.open,\r\n    })\r\n  },\r\n  methods: {\r\n    hasBrandSlot(){\r\n      return this.$slots.brand\r\n    },\r\n    onToggleSidebar(){\r\n      // console.log('lxSidebar', 'onToggleSidebar', !this.isSidebarOpen)\r\n      this.$emit('toggle', !this.isSidebarOpen)\r\n    }\r\n  },\r\n  emits: ['toggle'],\r\n  watch: {\r\n    isSidebarOpen(val) {\r\n      // console.log('lxSidebar', 'watch:isSidebarOpen', val)\r\n      this.$emit('toggle', val)\r\n    },\r\n    open(val){\r\n      // console.log('lxSidebar', 'watch:open', val)\r\n      this.isSidebarOpen = val\r\n    }\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\"\n                 class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </router-link>\n  </template>\n  <template v-else>\n    <a\n      :href=\"href\"\n      class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n      :class=\"{ 'text-gray-600 bg-gray-100 active':active }\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebarItem\",\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    count: {\n      type: Number,\n      default: 0\n    },\n  },\n  methods: {\n    firstLetter(): string {\n      // @ts-ignore\n      const a = this.$slots.default()\n      if(a && a[0] && a[0].el) {\n        const text = a[0].el.textContent\n        return text ? text.charAt(0) : '';\n      }\n      return ''\n    },\n    hasSvgSlot() {\n      return !!this.$slots.svg\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\"\n                 class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </router-link>\n  </template>\n  <template v-else>\n    <a\n      :href=\"href\"\n      class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n      :class=\"{ 'text-gray-600 bg-gray-100 active':active }\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebarItem\",\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    count: {\n      type: Number,\n      default: 0\n    },\n  },\n  methods: {\n    firstLetter(): string {\n      // @ts-ignore\n      const a = this.$slots.default()\n      if(a && a[0] && a[0].el) {\n        const text = a[0].el.textContent\n        return text ? text.charAt(0) : '';\n      }\n      return ''\n    },\n    hasSvgSlot() {\n      return !!this.$slots.svg\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\r\n  <a\r\n    href=\"#\"\r\n    @click=\"expanded = !expanded\"\r\n    class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600\"\r\n    :class=\"{'text-gray-600 bg-gray-100':active}\"\r\n  >\r\n    <span v-if=\"hasSvgSlot()\"\r\n          class=\"flex items-center justify-center text-lg text-gray-400\">\r\n      <slot name=\"svg\"></slot>\r\n    </span>\r\n    <span class=\"text-sm\"\r\n          :class=\"hasSvgSlot()?'ml-2':'ml-7'\">\r\n      <slot></slot>\r\n    </span>\r\n    <span v-if=\"count !== 0\"\r\n          class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\r\n    {{ count }}\r\n    </span>\r\n    <span class=\"ml-auto\">\r\n      <svg\r\n        class=\"w-4 h-4 transition-transform transform\"\r\n        :class=\"{ 'rotate-180': expanded }\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\r\n      </svg>\r\n    </span>\r\n  </a>\r\n  <div class=\"mt-2 space-y-2 sidebar-submenu\" v-if=\"expanded\">\r\n    <slot name=\"submenu\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxSidebarDdItem\",\r\n  props: {\r\n    active: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    count: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n  },\r\n  data() {\r\n    return ({\r\n      expanded: false,\r\n    })\r\n  },\r\n  methods: {\r\n    hasSvgSlot() {\r\n      return !!this.$slots.svg\r\n    },\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <a\r\n    href=\"#\"\r\n    @click=\"expanded = !expanded\"\r\n    class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600\"\r\n    :class=\"{'text-gray-600 bg-gray-100':active}\"\r\n  >\r\n    <span v-if=\"hasSvgSlot()\"\r\n          class=\"flex items-center justify-center text-lg text-gray-400\">\r\n      <slot name=\"svg\"></slot>\r\n    </span>\r\n    <span class=\"text-sm\"\r\n          :class=\"hasSvgSlot()?'ml-2':'ml-7'\">\r\n      <slot></slot>\r\n    </span>\r\n    <span v-if=\"count !== 0\"\r\n          class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\r\n    {{ count }}\r\n    </span>\r\n    <span class=\"ml-auto\">\r\n      <svg\r\n        class=\"w-4 h-4 transition-transform transform\"\r\n        :class=\"{ 'rotate-180': expanded }\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\r\n      </svg>\r\n    </span>\r\n  </a>\r\n  <div class=\"mt-2 space-y-2 sidebar-submenu\" v-if=\"expanded\">\r\n    <slot name=\"submenu\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxSidebarDdItem\",\r\n  props: {\r\n    active: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    count: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n  },\r\n  data() {\r\n    return ({\r\n      expanded: false,\r\n    })\r\n  },\r\n  methods: {\r\n    hasSvgSlot() {\r\n      return !!this.$slots.svg\r\n    },\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <header class=\"flex-shrink-0 border-b bg-white\">\r\n    <div class=\"flex items-center justify-between p-2\">\r\n      <!-- Navbar left -->\r\n      <div class=\"flex items-center space-x-3\">\r\n\r\n        <!-- Toggle sidebar button -->\r\n        <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md focus:outline-none focus:ring\">\r\n          <svg\r\n              class=\"w-4 h-4 text-gray-600\"\r\n              :class=\"{'transform transition-transform -rotate-180': isSidebarOpen}\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n          >\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"/>\r\n          </svg>\r\n        </button>\r\n\r\n        <span class=\"p-2 text-xl font-semibold tracking-wider uppercase\" v-if=\"hasBrandSlot()\">\r\n          <slot name=\"brand\"></slot>\r\n        </span>\r\n\r\n        <slot name=\"left\"></slot>\r\n\r\n      </div>\r\n\r\n      <!-- Navbar right -->\r\n      <div class=\"relative flex items-center space-x-3\">\r\n        <slot></slot>\r\n\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxNavbar\",\r\n  props: {\r\n    sidebarOpen: {\r\n      type: Boolean,\r\n      default: true,\r\n    }\r\n  },\r\n  data() {\r\n    return ({\r\n      isSidebarOpen: this.sidebarOpen,\r\n    })\r\n  },\r\n  methods: {\r\n    hasBrandSlot() {\r\n      return this.$slots.brand\r\n    },\r\n    onToggleSidebar() {\r\n      // console.log('lxNavbar', 'toggleSidebar', !this.isSidebarOpen)\r\n      this.$emit('toggleSidebar', !this.isSidebarOpen)\r\n    }\r\n  },\r\n  emits: ['toggleSidebar'],\r\n  watch: {\r\n    isSidebarOpen(val) {\r\n      // console.log('lxNavbar', 'watch:isSidebarOpen', val)\r\n      this.$emit('toggleSidebar', val)\r\n    },\r\n    sidebarOpen(val){\r\n      // console.log('lxNavbar', 'watch:sidebarOpen', val)\r\n      this.isSidebarOpen = val\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <header class=\"flex-shrink-0 border-b bg-white\">\r\n    <div class=\"flex items-center justify-between p-2\">\r\n      <!-- Navbar left -->\r\n      <div class=\"flex items-center space-x-3\">\r\n\r\n        <!-- Toggle sidebar button -->\r\n        <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md focus:outline-none focus:ring\">\r\n          <svg\r\n              class=\"w-4 h-4 text-gray-600\"\r\n              :class=\"{'transform transition-transform -rotate-180': isSidebarOpen}\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n          >\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"/>\r\n          </svg>\r\n        </button>\r\n\r\n        <span class=\"p-2 text-xl font-semibold tracking-wider uppercase\" v-if=\"hasBrandSlot()\">\r\n          <slot name=\"brand\"></slot>\r\n        </span>\r\n\r\n        <slot name=\"left\"></slot>\r\n\r\n      </div>\r\n\r\n      <!-- Navbar right -->\r\n      <div class=\"relative flex items-center space-x-3\">\r\n        <slot></slot>\r\n\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxNavbar\",\r\n  props: {\r\n    sidebarOpen: {\r\n      type: Boolean,\r\n      default: true,\r\n    }\r\n  },\r\n  data() {\r\n    return ({\r\n      isSidebarOpen: this.sidebarOpen,\r\n    })\r\n  },\r\n  methods: {\r\n    hasBrandSlot() {\r\n      return this.$slots.brand\r\n    },\r\n    onToggleSidebar() {\r\n      // console.log('lxNavbar', 'toggleSidebar', !this.isSidebarOpen)\r\n      this.$emit('toggleSidebar', !this.isSidebarOpen)\r\n    }\r\n  },\r\n  emits: ['toggleSidebar'],\r\n  watch: {\r\n    isSidebarOpen(val) {\r\n      // console.log('lxNavbar', 'watch:isSidebarOpen', val)\r\n      this.$emit('toggleSidebar', val)\r\n    },\r\n    sidebarOpen(val){\r\n      // console.log('lxNavbar', 'watch:sidebarOpen', val)\r\n      this.isSidebarOpen = val\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <template v-if=\"$router && !!to\">\r\n    <router-link :to=\"to\"\r\n                 class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\"\r\n    >\r\n      <slot></slot>\r\n    </router-link>\r\n  </template>\r\n  <template v-else>\r\n    <a :href=\"href\"\r\n       class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\">\r\n      <slot></slot>\r\n    </a>\r\n  </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxNavbarItem\",\r\n  props: {\r\n    href: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    to: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <template v-if=\"$router && !!to\">\r\n    <router-link :to=\"to\"\r\n                 class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\"\r\n    >\r\n      <slot></slot>\r\n    </router-link>\r\n  </template>\r\n  <template v-else>\r\n    <a :href=\"href\"\r\n       class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\">\r\n      <slot></slot>\r\n    </a>\r\n  </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxNavbarItem\",\r\n  props: {\r\n    href: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    to: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <button\r\n      class=\"p-2 bg-gray-100 rounded-full focus:outline-none focus:ring hover:bg-gray-200\"\r\n  >\r\n    <slot></slot>\r\n  </button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxNavbarButton\"\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <button\r\n      class=\"p-2 bg-gray-100 rounded-full focus:outline-none focus:ring hover:bg-gray-200\"\r\n  >\r\n    <slot></slot>\r\n  </button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxNavbarButton\"\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"absolute top-full py-2 w-48 bg-white rounded-md shadow-xl z-20 lx-dropdown-menu\"\r\n       :class=\"right?'right-0':'left-0'\"\r\n  role=\"dropdown-menu\"\r\n  >\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxDdMenu\",\r\n  props: {\r\n    right: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return ({\r\n\r\n    })\r\n  },\r\n\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"absolute top-full py-2 w-48 bg-white rounded-md shadow-xl z-20 lx-dropdown-menu\"\r\n       :class=\"right?'right-0':'left-0'\"\r\n  role=\"dropdown-menu\"\r\n  >\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxDdMenu\",\r\n  props: {\r\n    right: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return ({\r\n\r\n    })\r\n  },\r\n\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <template v-if=\"!!$router && to\">\r\n    <router-link class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\"\r\n                 :to=\"to\">\r\n      <slot></slot>\r\n    </router-link>\r\n  </template>\r\n  <template v-else>\r\n    <a :href=\"href\"\r\n       class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\">\r\n      <slot></slot>\r\n    </a>\r\n  </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxDdMenuItem\",\r\n  props: {\r\n    to: {\r\n      type: String\r\n    },\r\n    href: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <template v-if=\"!!$router && to\">\r\n    <router-link class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\"\r\n                 :to=\"to\">\r\n      <slot></slot>\r\n    </router-link>\r\n  </template>\r\n  <template v-else>\r\n    <a :href=\"href\"\r\n       class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\">\r\n      <slot></slot>\r\n    </a>\r\n  </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxDdMenuItem\",\r\n  props: {\r\n    to: {\r\n      type: String\r\n    },\r\n    href: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<script lang=\"ts\">\nimport {defineComponent} from 'vue';\n\ninterface LxTableData {\n  checkAll: boolean\n}\n\nexport default defineComponent({\n  name: \"lxTable\",\n  props: {\n    checkboxes: {\n      type: Boolean,\n      default: true\n    },\n    header: {\n      type: Array,\n      default: []\n    },\n    data: {\n      type: Array,\n      default: []\n    }\n  },\n  data(): LxTableData {\n    return ({\n      checkAll: false,\n    })\n  },\n  watch: {\n    checkAll(val: any) {\n      this.data.map((itm: any) => itm.checked = val)\n    },\n  },\n  methods: {}\n})\n</script>\n\n<template>\n  <table class=\"border-collapse shadow-sm bg-white border-t-3 border-blue-400 lx-table-zebra w-full\">\n    <thead>\n    <tr>\n      <th v-if=\"checkboxes\" class=\"px-3 py-3 text-sm text-left w-3\">\n        <input type=\"checkbox\" v-model=\"checkAll\"/>\n      </th>\n      <th v-for=\"h in header\" class=\"px-3 py-3 text-sm text-left\" :class=\"h.css\">{{ h.title ? h.title : h.key }}</th>\n    </tr>\n    </thead>\n    <tfoot></tfoot>\n    <tbody>\n    <template v-if=\"data.length > 0\">\n      <tr v-for=\"itm in data\" class=\"hover:bg-gray-100\" @click=\"$emit('row-click', itm)\">\n        <td v-if=\"checkboxes\" class=\"px-3 py-3 text-sm\">\n          <input type=\"checkbox\" :data-id=\"itm.id\" v-model=\"itm.checked\"/>\n        </td>\n        <template v-for=\"h in header\">\n          <td v-if=\"typeof($slots[h.key]) !== 'undefined'\" class=\"px-3 py-3 text-sm\">\n            <slot :name=\"h.key\" :field=\"h\" :item=\"itm\"></slot>\n          </td>\n          <td v-else class=\"px-3 py-3 text-sm\">\n            {{ itm[h.key] }}\n          </td>\n        </template>\n      </tr>\n    </template>\n    </tbody>\n  </table>\n</template>\n","<template>\r\n  <div class=\"btn-group\">\r\n\r\n    <lx-button :disabled=\"!canPrev()\" @click=\"onChangePage(-1)\">{{ prevButtonText }}</lx-button>\r\n    <template v-for=\"i in pageCount\">\r\n      <lx-button :disabled=\"i === currentPageSync\" @click=\"onPageClick(i)\">{{ i }}</lx-button>\r\n    </template>\r\n    <lx-button :disabled=\"!canNext()\" @click=\"onChangePage(1)\">{{ nextButtonText }}</lx-button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from 'vue'\r\nimport LxButton from \"@/lib-components/lxButton/lxButton.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxPagination\",\r\n  components: {LxButton},\r\n  props: {\r\n    total: {type: Number, default: 1},\r\n    itemsPerPage: {type: Number, default: 10},\r\n    currentPage: {type: Number, default: 1},\r\n    prevButtonText: {type: String, default: 'Previous'},\r\n    nextButtonText: {type: String, default: 'Next'},\r\n  },\r\n  data():any {\r\n    return ({\r\n      currentPageSync: this.currentPage,\r\n    })\r\n  },\r\n  methods: {\r\n    onPageClick(num:number) {\r\n      this.currentPageSync = num\r\n      this.$emit('pagechange', this.currentPageSync)\r\n    },\r\n    onChangePage(dif:number) {\r\n      this.currentPageSync += dif\r\n      this.currentPageSync = this.currentPageSync < 1 ? 1 : this.currentPageSync\r\n      this.currentPageSync = this.currentPageSync > this.pageCount ? this.pageCount : this.currentPageSync\r\n      this.$emit('pagechange', this.currentPageSync)\r\n    },\r\n    canPrev():boolean {\r\n      return this.currentPageSync > 1\r\n    },\r\n    canNext():boolean {\r\n      return this.currentPageSync < this.pageCount\r\n    }\r\n  },\r\n  computed: {\r\n    pageCount():number {\r\n      const res = Math.ceil(this.total / this.itemsPerPage)\r\n      return res === 0 ? 1 : res\r\n    }\r\n  },\r\n  watch: {\r\n    currentPage(newVal:number) {\r\n      this.currentPageSync = newVal\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"btn-group\">\r\n\r\n    <lx-button :disabled=\"!canPrev()\" @click=\"onChangePage(-1)\">{{ prevButtonText }}</lx-button>\r\n    <template v-for=\"i in pageCount\">\r\n      <lx-button :disabled=\"i === currentPageSync\" @click=\"onPageClick(i)\">{{ i }}</lx-button>\r\n    </template>\r\n    <lx-button :disabled=\"!canNext()\" @click=\"onChangePage(1)\">{{ nextButtonText }}</lx-button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from 'vue'\r\nimport LxButton from \"@/lib-components/lxButton/lxButton.vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxPagination\",\r\n  components: {LxButton},\r\n  props: {\r\n    total: {type: Number, default: 1},\r\n    itemsPerPage: {type: Number, default: 10},\r\n    currentPage: {type: Number, default: 1},\r\n    prevButtonText: {type: String, default: 'Previous'},\r\n    nextButtonText: {type: String, default: 'Next'},\r\n  },\r\n  data():any {\r\n    return ({\r\n      currentPageSync: this.currentPage,\r\n    })\r\n  },\r\n  methods: {\r\n    onPageClick(num:number) {\r\n      this.currentPageSync = num\r\n      this.$emit('pagechange', this.currentPageSync)\r\n    },\r\n    onChangePage(dif:number) {\r\n      this.currentPageSync += dif\r\n      this.currentPageSync = this.currentPageSync < 1 ? 1 : this.currentPageSync\r\n      this.currentPageSync = this.currentPageSync > this.pageCount ? this.pageCount : this.currentPageSync\r\n      this.$emit('pagechange', this.currentPageSync)\r\n    },\r\n    canPrev():boolean {\r\n      return this.currentPageSync > 1\r\n    },\r\n    canNext():boolean {\r\n      return this.currentPageSync < this.pageCount\r\n    }\r\n  },\r\n  computed: {\r\n    pageCount():number {\r\n      const res = Math.ceil(this.total / this.itemsPerPage)\r\n      return res === 0 ? 1 : res\r\n    }\r\n  },\r\n  watch: {\r\n    currentPage(newVal:number) {\r\n      this.currentPageSync = newVal\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\n  <div class=\"flex flex-col\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"text-md\">{{ label }}</label>\n    </template>\n\n    <div class=\"input-container flex\">\n\n      <div\n        class=\"shadow-sm border rounded rounded-r-none border-r-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention prepend\"\n        v-if=\"hasPrepend\">\n        <slot name=\"prepend\"></slot>\n      </div>\n\n      <input :type=\"type\" :id=\"uid\" :placeholder=\"placeholder\" :readonly=\"readonly\"\n             @input=\"onInput($event.target.value)\" :value=\"modelValue\"\n             class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\n             :class=\"{'rounded-l-none':hasPrepend, 'rounded-r-none':hasAppend}\"\n      />\n      <div\n        class=\"shadow-sm border rounded rounded-l-none border-l-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention append\"\n        v-if=\"hasAppend\">\n        <slot name=\"append\"></slot>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxInput\",\n  emits: ['update:modelValue', 'input'],\n\n  props: {\n    modelValue: String,\n    readonly: {type: Boolean, default: false},\n    commitTimout: {\n      type: Number,\n      default: 0\n    },\n    label: {type: String, default: ''},\n    size: {\n      type: String,\n      default: '',\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n    },\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    emptyLabel: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n\n    type: {\n      type: String,\n      default: 'text',\n      validator: (value: string) => {\n        return ['text', 'number', 'email', 'phone', 'password'].indexOf(value) !== -1\n      },\n    },\n  },\n\n  data() {\n    return ({\n      timer: 0,\n      uid: this.genUid(),\n    })\n  },\n  computed: {\n    colcount() {\n      if (this.hasAppend && this.hasPrepend) {\n        return 3\n      }\n      if (this.hasAppend || this.hasPrepend) {\n        return 2\n      }\n      return 1\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n  methods: {\n    onInput(e: any) {\n      const that = this\n      if (+this.commitTimout > 0) {\n        if (!!this.timer)\n          clearTimeout(this.timer)\n        this.timer = +global.setTimeout(function () {\n          that.$emit('input', e)\n        }.bind(this), this.commitTimout)\n      } else {\n        this.$emit('input', e)\n      }\n      this.$emit('update:modelValue', e)\n    },\n    getCss(): string {\n      const css: string[] = []\n      css.push(this.readonly ? 'readonly' : '')\n      // css.push(this.size ? `input-group-${this.size}` : '')\n      if (this.size) {\n        css.push(`input-group-${this.size}`)\n      }\n      return css.join(' ')\n    },\n    genUid():string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"flex flex-col\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"text-md\">{{ label }}</label>\n    </template>\n\n    <div class=\"input-container flex\">\n\n      <div\n        class=\"shadow-sm border rounded rounded-r-none border-r-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention prepend\"\n        v-if=\"hasPrepend\">\n        <slot name=\"prepend\"></slot>\n      </div>\n\n      <input :type=\"type\" :id=\"uid\" :placeholder=\"placeholder\" :readonly=\"readonly\"\n             @input=\"onInput($event.target.value)\" :value=\"modelValue\"\n             class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\n             :class=\"{'rounded-l-none':hasPrepend, 'rounded-r-none':hasAppend}\"\n      />\n      <div\n        class=\"shadow-sm border rounded rounded-l-none border-l-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention append\"\n        v-if=\"hasAppend\">\n        <slot name=\"append\"></slot>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxInput\",\n  emits: ['update:modelValue', 'input'],\n\n  props: {\n    modelValue: String,\n    readonly: {type: Boolean, default: false},\n    commitTimout: {\n      type: Number,\n      default: 0\n    },\n    label: {type: String, default: ''},\n    size: {\n      type: String,\n      default: '',\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n    },\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    emptyLabel: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n\n    type: {\n      type: String,\n      default: 'text',\n      validator: (value: string) => {\n        return ['text', 'number', 'email', 'phone', 'password'].indexOf(value) !== -1\n      },\n    },\n  },\n\n  data() {\n    return ({\n      timer: 0,\n      uid: this.genUid(),\n    })\n  },\n  computed: {\n    colcount() {\n      if (this.hasAppend && this.hasPrepend) {\n        return 3\n      }\n      if (this.hasAppend || this.hasPrepend) {\n        return 2\n      }\n      return 1\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n  methods: {\n    onInput(e: any) {\n      const that = this\n      if (+this.commitTimout > 0) {\n        if (!!this.timer)\n          clearTimeout(this.timer)\n        this.timer = +global.setTimeout(function () {\n          that.$emit('input', e)\n        }.bind(this), this.commitTimout)\n      } else {\n        this.$emit('input', e)\n      }\n      this.$emit('update:modelValue', e)\n    },\n    getCss(): string {\n      const css: string[] = []\n      css.push(this.readonly ? 'readonly' : '')\n      // css.push(this.size ? `input-group-${this.size}` : '')\n      if (this.size) {\n        css.push(`input-group-${this.size}`)\n      }\n      return css.join(' ')\n    },\n    genUid():string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\r\n  <!--  :class=\"{ 'text-white': activeIndex === 2, 'text-indigo-600': !(activeIndex === 2) }\"-->\r\n  <span class=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\" data-root=\"lx-dd-list\">\r\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                     viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n  <path fill-rule=\"evenodd\"\r\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n        clip-rule=\"evenodd\"></path>\r\n</svg>\r\n              </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxSelectInputCheckmark\"\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <!--  :class=\"{ 'text-white': activeIndex === 2, 'text-indigo-600': !(activeIndex === 2) }\"-->\r\n  <span class=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\" data-root=\"lx-dd-list\">\r\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                     viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n  <path fill-rule=\"evenodd\"\r\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n        clip-rule=\"evenodd\"></path>\r\n</svg>\r\n              </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxSelectInputCheckmark\"\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\n  <div data-root=\"lx-dd-list\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"block text-sm font-medium text-gray-700\"\n             :class=\"labelClass\">{{ label }}</label>\n    </template>\n    <div class=\"mt-1 relative\">\n      <button type=\"button\"\n              class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              aria-haspopup=\"listbox\"\n              aria-expanded=\"true\"\n              aria-labelledby=\"listbox-label\"\n              @click=\"open = !open\"\n              data-root=\"lx-dd-list\"\n      >\n        <!--suppress HtmlUnknownTag -->\n        <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n          <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n            <slot name=\"item\" :item=\"selectedOption\"></slot>\n          </template>\n          <template v-else>\n            <span\n              class=\"ml-3 block truncate font-semibold font-normal\">\n              {{ getValue(selectedOption) }}\n            </span>\n\n          </template>\n        </div>\n        <span class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n        <!-- Heroicon name: solid/selector -->\n        <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n        >\n          <path fill-rule=\"evenodd\"\n                d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"/>\n        </svg>\n      </span>\n      </button>\n\n      <ul v-show=\"open\"\n          class=\"z-40 absolute mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n          @keydown.enter.stop.prevent=\"onOptionSelect()\"\n          @keydown.space.stop.prevent=\"onOptionSelect()\"\n          @keydown.escape=\"onEscape()\"\n          @keydown.arrow-up.prevent=\"onArrowUp()\"\n          @keydown.arrow-down.prevent=\"onArrowDown()\"\n          tabindex=\"-1\"\n          role=\"listbox\"\n      >\n\n        <template v-for=\"opt in options\">\n          <li\n            class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9 hover:bg-indigo-600 hover:text-white\"\n            role=\"option\"\n            @click=\"onChoose(opt[optionValueField])\"\n          >\n            <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n              <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n                <slot name=\"item\" :item=\"opt\"></slot>\n              </template>\n              <template v-else>\n                {{ getValue(opt) }}\n              </template>\n            </div>\n            <template v-if=\"+opt[optionValueField] === +modelValue\">\n              <lx-select-input-checkmark class=\"\"/>\n            </template>\n          </li>\n        </template>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\nimport lxSelectInputCheckmark from \"@/lib-components/lxInput/components/lxSelectInputCheckmark.vue\";\n\nexport default defineComponent({\n  name: \"lxSelectInput\",\n  emits: ['update:modelValue'],\n  components: {lxSelectInputCheckmark},\n  props: {\n    modelValue: {type: String},\n    options: {type: Array, default: []},\n    multiple: {type: Boolean, default: false},\n    optionTitleField: {type: String, default: 'title'},\n    optionValueField: {type: String, default: 'id'},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      open: false,\n      uid: this.genUid(),\n    })\n  },\n  created() {\n    window.addEventListener('click', (e) => {\n      e.stopPropagation()\n      if (!this.$el.contains(e.target)) {\n        const el = e.target as HTMLElement\n        let dataset = el.dataset\n        if (['SPAN', 'IMG', 'SVG'].includes(el.tagName)) {\n          const parent = el.parentElement as HTMLElement\n          dataset = parent.dataset\n        }\n        if (dataset && !(dataset.root && dataset.root === 'lx-dd-list')) {\n          this.open = false\n        }\n      }\n    })\n  },\n  computed: {\n    selectedOption(): any {\n      // @ts-ignore\n      return this.options.find((i: number) => +i[this.optionValueField] === +this.modelValue)\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  }, // computed\n  methods: {\n    onOptionSelect() {\n    },\n    onEscape() {\n    },\n    onArrowUp() {\n    },\n    onArrowDown() {\n    },\n    onChoose(e: any) {\n      this.$emit('update:modelValue', `${e}`)\n      this.open = false\n    },\n    getValue(opt: any) {\n      if (!opt) {\n        return ''\n      }\n      return opt[this.optionTitleField]\n    },\n    getCss(): string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid(): string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    },\n  } // methods\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div data-root=\"lx-dd-list\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"block text-sm font-medium text-gray-700\"\n             :class=\"labelClass\">{{ label }}</label>\n    </template>\n    <div class=\"mt-1 relative\">\n      <button type=\"button\"\n              class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              aria-haspopup=\"listbox\"\n              aria-expanded=\"true\"\n              aria-labelledby=\"listbox-label\"\n              @click=\"open = !open\"\n              data-root=\"lx-dd-list\"\n      >\n        <!--suppress HtmlUnknownTag -->\n        <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n          <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n            <slot name=\"item\" :item=\"selectedOption\"></slot>\n          </template>\n          <template v-else>\n            <span\n              class=\"ml-3 block truncate font-semibold font-normal\">\n              {{ getValue(selectedOption) }}\n            </span>\n\n          </template>\n        </div>\n        <span class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n        <!-- Heroicon name: solid/selector -->\n        <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n        >\n          <path fill-rule=\"evenodd\"\n                d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"/>\n        </svg>\n      </span>\n      </button>\n\n      <ul v-show=\"open\"\n          class=\"z-40 absolute mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n          @keydown.enter.stop.prevent=\"onOptionSelect()\"\n          @keydown.space.stop.prevent=\"onOptionSelect()\"\n          @keydown.escape=\"onEscape()\"\n          @keydown.arrow-up.prevent=\"onArrowUp()\"\n          @keydown.arrow-down.prevent=\"onArrowDown()\"\n          tabindex=\"-1\"\n          role=\"listbox\"\n      >\n\n        <template v-for=\"opt in options\">\n          <li\n            class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9 hover:bg-indigo-600 hover:text-white\"\n            role=\"option\"\n            @click=\"onChoose(opt[optionValueField])\"\n          >\n            <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n              <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n                <slot name=\"item\" :item=\"opt\"></slot>\n              </template>\n              <template v-else>\n                {{ getValue(opt) }}\n              </template>\n            </div>\n            <template v-if=\"+opt[optionValueField] === +modelValue\">\n              <lx-select-input-checkmark class=\"\"/>\n            </template>\n          </li>\n        </template>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\nimport lxSelectInputCheckmark from \"@/lib-components/lxInput/components/lxSelectInputCheckmark.vue\";\n\nexport default defineComponent({\n  name: \"lxSelectInput\",\n  emits: ['update:modelValue'],\n  components: {lxSelectInputCheckmark},\n  props: {\n    modelValue: {type: String},\n    options: {type: Array, default: []},\n    multiple: {type: Boolean, default: false},\n    optionTitleField: {type: String, default: 'title'},\n    optionValueField: {type: String, default: 'id'},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      open: false,\n      uid: this.genUid(),\n    })\n  },\n  created() {\n    window.addEventListener('click', (e) => {\n      e.stopPropagation()\n      if (!this.$el.contains(e.target)) {\n        const el = e.target as HTMLElement\n        let dataset = el.dataset\n        if (['SPAN', 'IMG', 'SVG'].includes(el.tagName)) {\n          const parent = el.parentElement as HTMLElement\n          dataset = parent.dataset\n        }\n        if (dataset && !(dataset.root && dataset.root === 'lx-dd-list')) {\n          this.open = false\n        }\n      }\n    })\n  },\n  computed: {\n    selectedOption(): any {\n      // @ts-ignore\n      return this.options.find((i: number) => +i[this.optionValueField] === +this.modelValue)\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  }, // computed\n  methods: {\n    onOptionSelect() {\n    },\n    onEscape() {\n    },\n    onArrowUp() {\n    },\n    onArrowDown() {\n    },\n    onChoose(e: any) {\n      this.$emit('update:modelValue', `${e}`)\n      this.open = false\n    },\n    getValue(opt: any) {\n      if (!opt) {\n        return ''\n      }\n      return opt[this.optionTitleField]\n    },\n    getCss(): string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid(): string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    },\n  } // methods\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\r\n  <!--  <div class=\"rounded border border-dashed  relative\"-->\r\n  <!--       :class=\"{'border-gray-300':readonly, 'border-gray-500':!readonly}\"-->\r\n  <!--  >-->\r\n  <!--    <input type=\"file\" multiple-->\r\n  <!--           class=\"cursor-pointer relative block opacity-0 w-full h-full p-20 z-50\"-->\r\n  <!--           :readonly=\"readonly\"-->\r\n  <!--           :disabled=\"readonly\"-->\r\n  <!--           @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"-->\r\n  <!--    >-->\r\n  <!--    <div class=\"text-center p-10 absolute top-0 right-0 left-0 m-auto\"-->\r\n  <!--         :class=\"{'text-gray-400':readonly}\">-->\r\n  <!--      {{ modelValue ? modelValue : label }}-->\r\n  <!--    </div>-->\r\n  <!--  </div>-->\r\n\r\n  <div class=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\"\r\n       :class=\"{'text-gray-400':readonly}\"\r\n  >\r\n    <div class=\"space-y-1 text-center\">\r\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"\r\n           aria-hidden=\"true\">\r\n        <path\r\n          d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\r\n          stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n      </svg>\r\n      <div class=\"flex text-sm text-gray-600\">\r\n        <label :for=\"uid\"\r\n               class=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\">\r\n          <span>Upload a file</span>\r\n          <input id=\"uid\" name=\"file-upload\" type=\"file\"\r\n                 class=\"sr-only\"\r\n                 :readonly=\"readonly\"\r\n                 :disabled=\"readonly\"\r\n                 @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"\r\n          />\r\n        </label>\r\n        <p class=\"pl-1\">or drag and drop</p>\r\n      </div>\r\n      <p class=\"text-xs text-gray-500\">\r\n        PNG, JPG, GIF up to 10MB\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxFileInput\",\r\n  props: {\r\n    modelValue: String,\r\n    label: {type: String, default: ''},\r\n    emptyLabel: {type: Boolean, default: false},\r\n    readonly: {type: Boolean, default: false},\r\n    placeholder: {type: String, default: ''},\r\n    labelSize: {\r\n      type: String,\r\n      validator:  (value:string)=> {\r\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n    size: {\r\n      type: String,\r\n      validator:  (value:string)=> {\r\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n  },\r\n  emits: ['update:modelValue'],\r\n  data() {\r\n    return ({\r\n      uid: this.genUid(),\r\n    })\r\n  },\r\n  methods:{\r\n    getCss():string {\r\n      const css = []\r\n      css.push(this.readonly ? 'readonly' : '')\r\n      css.push(this.size ? `input-group-${this.size}` : '')\r\n      return css.join(' ')\r\n    },\r\n    genUid():string {\r\n      return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n  },\r\n  computed: {\r\n    hasAppend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['append']\r\n    },\r\n    hasPrepend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['prepend']\r\n    },\r\n    labelClass() {\r\n      let val: string[] = [];\r\n      val.push(this.labelSize)\r\n\r\n      if (this.label) {\r\n        val.push('has-text')\r\n      }\r\n      return val.join(' ')\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <!--  <div class=\"rounded border border-dashed  relative\"-->\r\n  <!--       :class=\"{'border-gray-300':readonly, 'border-gray-500':!readonly}\"-->\r\n  <!--  >-->\r\n  <!--    <input type=\"file\" multiple-->\r\n  <!--           class=\"cursor-pointer relative block opacity-0 w-full h-full p-20 z-50\"-->\r\n  <!--           :readonly=\"readonly\"-->\r\n  <!--           :disabled=\"readonly\"-->\r\n  <!--           @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"-->\r\n  <!--    >-->\r\n  <!--    <div class=\"text-center p-10 absolute top-0 right-0 left-0 m-auto\"-->\r\n  <!--         :class=\"{'text-gray-400':readonly}\">-->\r\n  <!--      {{ modelValue ? modelValue : label }}-->\r\n  <!--    </div>-->\r\n  <!--  </div>-->\r\n\r\n  <div class=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\"\r\n       :class=\"{'text-gray-400':readonly}\"\r\n  >\r\n    <div class=\"space-y-1 text-center\">\r\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"\r\n           aria-hidden=\"true\">\r\n        <path\r\n          d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\r\n          stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n      </svg>\r\n      <div class=\"flex text-sm text-gray-600\">\r\n        <label :for=\"uid\"\r\n               class=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\">\r\n          <span>Upload a file</span>\r\n          <input id=\"uid\" name=\"file-upload\" type=\"file\"\r\n                 class=\"sr-only\"\r\n                 :readonly=\"readonly\"\r\n                 :disabled=\"readonly\"\r\n                 @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"\r\n          />\r\n        </label>\r\n        <p class=\"pl-1\">or drag and drop</p>\r\n      </div>\r\n      <p class=\"text-xs text-gray-500\">\r\n        PNG, JPG, GIF up to 10MB\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxFileInput\",\r\n  props: {\r\n    modelValue: String,\r\n    label: {type: String, default: ''},\r\n    emptyLabel: {type: Boolean, default: false},\r\n    readonly: {type: Boolean, default: false},\r\n    placeholder: {type: String, default: ''},\r\n    labelSize: {\r\n      type: String,\r\n      validator:  (value:string)=> {\r\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n    size: {\r\n      type: String,\r\n      validator:  (value:string)=> {\r\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n  },\r\n  emits: ['update:modelValue'],\r\n  data() {\r\n    return ({\r\n      uid: this.genUid(),\r\n    })\r\n  },\r\n  methods:{\r\n    getCss():string {\r\n      const css = []\r\n      css.push(this.readonly ? 'readonly' : '')\r\n      css.push(this.size ? `input-group-${this.size}` : '')\r\n      return css.join(' ')\r\n    },\r\n    genUid():string {\r\n      return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n  },\r\n  computed: {\r\n    hasAppend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['append']\r\n    },\r\n    hasPrepend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['prepend']\r\n    },\r\n    labelClass() {\r\n      let val: string[] = [];\r\n      val.push(this.labelSize)\r\n\r\n      if (this.label) {\r\n        val.push('has-text')\r\n      }\r\n      return val.join(' ')\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"input-group\" :class=\"getCss()\">\r\n    <template v-if=\"emptyLabel || label\">\r\n      <label :for=\"uid\" :class=\"labelClass\">{{ label }}</label>\r\n    </template>\r\n    <div class=\"input-container\">\r\n      <!--      class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"-->\r\n      <!--suppress HtmlFormInputWithoutLabel -->\r\n      <textarea\r\n        class=\"shadow-sm focus:outline-none focus:shadow-outline py-2 px-3 mt-1 block w-full sm:text-sm border rounded-md text-gray-700\"\r\n        @input=\"$emit('update:modelValue', $event.target.value)\"\r\n        :readonly=\"readonly\"\r\n      >{{ modelValue }}</textarea>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxTextareaInput\",\r\n  props: {\r\n    modelValue: String,\r\n    label: {type: String, default: ''},\r\n    emptyLabel: {type: Boolean, default: false},\r\n    readonly: {type: Boolean, default: false},\r\n    placeholder: {type: String, default: ''},\r\n    labelSize: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n    size: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n  },\r\n  emits: ['update:modelValue'],\r\n  data() {\r\n    return ({\r\n      uid: this.genUid(),\r\n    })\r\n  },\r\n  methods: {\r\n    getCss() {\r\n      const css = []\r\n      css.push(this.readonly ? 'readonly' : '')\r\n      css.push(this.size ? `input-group-${this.size}` : '')\r\n      return css.join(' ')\r\n    },\r\n    genUid() {\r\n      return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n  },\r\n  computed: {\r\n    hasAppend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['append']\r\n    },\r\n    hasPrepend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['prepend']\r\n    },\r\n    labelClass() {\r\n      let val: string[] = [];\r\n      val.push(this.labelSize)\r\n\r\n      if (this.label) {\r\n        val.push('has-text')\r\n      }\r\n      return val.join(' ')\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"input-group\" :class=\"getCss()\">\r\n    <template v-if=\"emptyLabel || label\">\r\n      <label :for=\"uid\" :class=\"labelClass\">{{ label }}</label>\r\n    </template>\r\n    <div class=\"input-container\">\r\n      <!--      class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"-->\r\n      <!--suppress HtmlFormInputWithoutLabel -->\r\n      <textarea\r\n        class=\"shadow-sm focus:outline-none focus:shadow-outline py-2 px-3 mt-1 block w-full sm:text-sm border rounded-md text-gray-700\"\r\n        @input=\"$emit('update:modelValue', $event.target.value)\"\r\n        :readonly=\"readonly\"\r\n      >{{ modelValue }}</textarea>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxTextareaInput\",\r\n  props: {\r\n    modelValue: String,\r\n    label: {type: String, default: ''},\r\n    emptyLabel: {type: Boolean, default: false},\r\n    readonly: {type: Boolean, default: false},\r\n    placeholder: {type: String, default: ''},\r\n    labelSize: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n    size: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n  },\r\n  emits: ['update:modelValue'],\r\n  data() {\r\n    return ({\r\n      uid: this.genUid(),\r\n    })\r\n  },\r\n  methods: {\r\n    getCss() {\r\n      const css = []\r\n      css.push(this.readonly ? 'readonly' : '')\r\n      css.push(this.size ? `input-group-${this.size}` : '')\r\n      return css.join(' ')\r\n    },\r\n    genUid() {\r\n      return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n  },\r\n  computed: {\r\n    hasAppend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['append']\r\n    },\r\n    hasPrepend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['prepend']\r\n    },\r\n    labelClass() {\r\n      let val: string[] = [];\r\n      val.push(this.labelSize)\r\n\r\n      if (this.label) {\r\n        val.push('has-text')\r\n      }\r\n      return val.join(' ')\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <span class=\"badge\" :class=\"getCss()\">\r\n    <slot></slot>\r\n  </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxBadge\",\r\n  props: {\r\n    styl: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light'].indexOf(value) !== -1\r\n      },\r\n      default: 'primary',\r\n    },\r\n  },\r\n  methods: {\r\n    getCss() {\r\n      const css = []\r\n      css.push(`badge-${this.styl}`)\r\n      return css.join(' ')\r\n    },\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <span class=\"badge\" :class=\"getCss()\">\r\n    <slot></slot>\r\n  </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"lxBadge\",\r\n  props: {\r\n    styl: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light'].indexOf(value) !== -1\r\n      },\r\n      default: 'primary',\r\n    },\r\n  },\r\n  methods: {\r\n    getCss() {\r\n      const css = []\r\n      css.push(`badge-${this.styl}`)\r\n      return css.join(' ')\r\n    },\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"lg:flex lg:items-center lg:justify-between mb-5\">\r\n    <div class=\"flex-1 min-w-0\">\r\n      <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\r\n        {{ title }}\r\n      </h2>\r\n      <template v-if=\"!!$slots.subheader\">\r\n        <slot name=\"subheader\">\r\n          <div class=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/briefcase &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--            <path-->\r\n            <!--              d=\"M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          Full-time-->\r\n            <!--        </div>-->\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/location-marker &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          Remote-->\r\n            <!--        </div>-->\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/currency-dollar &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path-->\r\n            <!--              d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/>-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          $120k &ndash; $140k-->\r\n            <!--        </div>-->\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/calendar &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          Closing on January 9, 2020-->\r\n            <!--        </div>-->\r\n          </div>\r\n        </slot>\r\n      </template>\r\n    </div>\r\n\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxPageTitle\",\r\n  props: {\r\n    title: String,\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"lg:flex lg:items-center lg:justify-between mb-5\">\r\n    <div class=\"flex-1 min-w-0\">\r\n      <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\r\n        {{ title }}\r\n      </h2>\r\n      <template v-if=\"!!$slots.subheader\">\r\n        <slot name=\"subheader\">\r\n          <div class=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/briefcase &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--            <path-->\r\n            <!--              d=\"M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          Full-time-->\r\n            <!--        </div>-->\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/location-marker &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          Remote-->\r\n            <!--        </div>-->\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/currency-dollar &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path-->\r\n            <!--              d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/>-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          $120k &ndash; $140k-->\r\n            <!--        </div>-->\r\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\r\n            <!--          &lt;!&ndash; Heroicon name: solid/calendar &ndash;&gt;-->\r\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\r\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\r\n            <!--            <path fill-rule=\"evenodd\"-->\r\n            <!--                  d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"-->\r\n            <!--                  clip-rule=\"evenodd\"/>-->\r\n            <!--          </svg>-->\r\n            <!--          Closing on January 9, 2020-->\r\n            <!--        </div>-->\r\n          </div>\r\n        </slot>\r\n      </template>\r\n    </div>\r\n\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxPageTitle\",\r\n  props: {\r\n    title: String,\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\n\n  <label class=\"inline-flex items-center\" :for=\"uid\">\n    <input type=\"checkbox\" class=\"form-checkbox h-5 w-5 text-red-600\" :id=\"uid\"\n           @change=\"onStateChange\" :checked=\"modelValue\">\n\n\n    <span class=\"ml-2 text-gray-700\">{{ label }}</span>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxCheckbox\",\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: {type: Boolean, default: false},\n    value: {type: String},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      uid: this.genUid(),\n      checked: this.modelValue\n    })\n  },\n  methods: {\n    onStateChange(e: any) {\n      this.$emit('update:modelValue', e.target.checked)\n    },\n    getCss() {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n\n  <label class=\"inline-flex items-center\" :for=\"uid\">\n    <input type=\"checkbox\" class=\"form-checkbox h-5 w-5 text-red-600\" :id=\"uid\"\n           @change=\"onStateChange\" :checked=\"modelValue\">\n\n\n    <span class=\"ml-2 text-gray-700\">{{ label }}</span>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxCheckbox\",\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: {type: Boolean, default: false},\n    value: {type: String},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      uid: this.genUid(),\n      checked: this.modelValue\n    })\n  },\n  methods: {\n    onStateChange(e: any) {\n      this.$emit('update:modelValue', e.target.checked)\n    },\n    getCss() {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<!--suppress HtmlUnknownTag -->\r\n<template>\r\n  <label :for=\"uid\" class=\"flex items-center cursor-pointer\">\r\n    <div class=\"pr-2\">{{ label }}</div>\r\n    <!-- toggle -->\r\n    <div class=\"relative\">\r\n      <input :id=\"uid\" type=\"checkbox\" class=\"hidden\"\r\n             @change=\"$emit('update:modelValue', $event.target.checked)\" :checked=\"!!modelValue\"\r\n      />\r\n      <span class=\"absolute font-medium text-xs uppercase right-1 top-1.5\">\r\n      {{ textFalse }}\r\n    </span>\r\n      <span class=\"absolute font-medium text-xs uppercase right-8 top-1.5 text-white\">\r\n      {{ textTrue }}\r\n    </span>\r\n\r\n      <!-- path -->\r\n      <div\r\n        class=\"toggle-path bg-gray-200 w-14 h-7 rounded-full shadow-inner transition bg-gray-200 duration-300 ease-in-out\"></div>\r\n\r\n      <!-- crcle -->\r\n      <div\r\n        class=\"toggle-circle absolute w-7 h-7 bg-gray-200 rounded-full shadow inset-y-0 left-0 transition-all duration-300 ease-in-out\"></div>\r\n\r\n    </div>\r\n  </label>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxToggle\",\r\n  emits: ['update:modelValue'],\r\n  // mixins: [inputMixin],\r\n  props: {\r\n    modelValue: Boolean,\r\n    textTrue: {type: String, default: 'ON'},\r\n    textFalse: {type: String, default: 'OFF'},\r\n    label: {type: String, default: ''},\r\n    emptyLabel: {type: Boolean, default: false},\r\n    readonly: {type: Boolean, default: false},\r\n    placeholder: {type: String, default: ''},\r\n    labelSize: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n    size: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n  },\r\n  data() {\r\n    return ({\r\n      uid: this.genUid(),\r\n    })\r\n  },\r\n  methods: {\r\n    getCss(): string {\r\n      const css = []\r\n      css.push(this.readonly ? 'readonly' : '')\r\n      css.push(this.size ? `input-group-${this.size}` : '')\r\n      return css.join(' ')\r\n    },\r\n    genUid(): string {\r\n      return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n  },\r\n  computed: {\r\n    hasAppend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['append']\r\n    },\r\n    hasPrepend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['prepend']\r\n    },\r\n    labelClass() {\r\n      let val: string[] = [];\r\n      val.push(this.labelSize)\r\n\r\n      if (this.label) {\r\n        val.push('has-text')\r\n      }\r\n      return val.join(' ')\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\ninput:checked ~ .toggle-circle {\r\n  transform: translateX(100%);\r\n}\r\n\r\ninput:checked ~ .toggle-path {\r\n  @apply bg-blue-500;\r\n}\r\n</style>\r\n","<!--suppress HtmlUnknownTag -->\r\n<template>\r\n  <label :for=\"uid\" class=\"flex items-center cursor-pointer\">\r\n    <div class=\"pr-2\">{{ label }}</div>\r\n    <!-- toggle -->\r\n    <div class=\"relative\">\r\n      <input :id=\"uid\" type=\"checkbox\" class=\"hidden\"\r\n             @change=\"$emit('update:modelValue', $event.target.checked)\" :checked=\"!!modelValue\"\r\n      />\r\n      <span class=\"absolute font-medium text-xs uppercase right-1 top-1.5\">\r\n      {{ textFalse }}\r\n    </span>\r\n      <span class=\"absolute font-medium text-xs uppercase right-8 top-1.5 text-white\">\r\n      {{ textTrue }}\r\n    </span>\r\n\r\n      <!-- path -->\r\n      <div\r\n        class=\"toggle-path bg-gray-200 w-14 h-7 rounded-full shadow-inner transition bg-gray-200 duration-300 ease-in-out\"></div>\r\n\r\n      <!-- crcle -->\r\n      <div\r\n        class=\"toggle-circle absolute w-7 h-7 bg-gray-200 rounded-full shadow inset-y-0 left-0 transition-all duration-300 ease-in-out\"></div>\r\n\r\n    </div>\r\n  </label>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxToggle\",\r\n  emits: ['update:modelValue'],\r\n  // mixins: [inputMixin],\r\n  props: {\r\n    modelValue: Boolean,\r\n    textTrue: {type: String, default: 'ON'},\r\n    textFalse: {type: String, default: 'OFF'},\r\n    label: {type: String, default: ''},\r\n    emptyLabel: {type: Boolean, default: false},\r\n    readonly: {type: Boolean, default: false},\r\n    placeholder: {type: String, default: ''},\r\n    labelSize: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n    size: {\r\n      type: String,\r\n      validator: (value: string) => {\r\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\r\n      },\r\n      default: ''\r\n    },\r\n  },\r\n  data() {\r\n    return ({\r\n      uid: this.genUid(),\r\n    })\r\n  },\r\n  methods: {\r\n    getCss(): string {\r\n      const css = []\r\n      css.push(this.readonly ? 'readonly' : '')\r\n      css.push(this.size ? `input-group-${this.size}` : '')\r\n      return css.join(' ')\r\n    },\r\n    genUid(): string {\r\n      return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n  },\r\n  computed: {\r\n    hasAppend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['append']\r\n    },\r\n    hasPrepend(): boolean {\r\n      // @ts-ignore\r\n      return this.$slots['prepend']\r\n    },\r\n    labelClass() {\r\n      let val: string[] = [];\r\n      val.push(this.labelSize)\r\n\r\n      if (this.label) {\r\n        val.push('has-text')\r\n      }\r\n      return val.join(' ')\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\ninput:checked ~ .toggle-circle {\r\n  transform: translateX(100%);\r\n}\r\n\r\ninput:checked ~ .toggle-path {\r\n  @apply bg-blue-500;\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"main-modal fixed w-full h-100 inset-0 z-50 overflow-hidden flex justify-center items-center animated fadeIn faster\"\r\n    style=\"background: rgba(0,0,0,.7);\" v-show=\"show\" @click=\"$emit('close')\">\r\n    <div class=\"md:w-1/3 sm:w-full rounded-lg shadow-lg bg-white my-3\">\r\n      <div class=\"flex justify-between border-b border-gray-100 px-5 py-4\">\r\n        <div class=\"flex\">\r\n\r\n          <!--        Info -->\r\n          <template v-if=\"typ === 'info'\">\r\n            <svg class=\"w-6 mr-2 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                 stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n            </svg>\r\n          </template>\r\n\r\n          <!--        Warning -->\r\n          <template v-if=\"typ === 'warning'\">\r\n            <svg class=\"w-6 mr-2 text-yellow-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                 stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\r\n            </svg>\r\n          </template>\r\n\r\n          <!--        Error -->\r\n          <template v-if=\"typ === 'error'\">\r\n            <svg class=\"w-6 mr-2 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                 stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\r\n            </svg>\r\n\r\n          </template>\r\n\r\n          <span class=\"font-bold text-gray-700 text-lg\">{{ the_title }}</span>\r\n\r\n        </div>\r\n        <div>\r\n          <button @click=\"$emit('close')\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\r\n                 class=\"w-4 h-4 text-red-500 hover:text-red-600 transition duration-150\">\r\n              <path fill=\"currentColor\"\r\n                    d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\r\n                    class=\"\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"px-10 py-5 text-gray-600\">\r\n        <slot></slot>\r\n      </div>\r\n\r\n      <div class=\"px-5 py-4 flex justify-end\">\r\n        <template v-if=\"yesNo\">\r\n          <lx-button typ=\"flat\" @click=\"$emit('okay')\">\r\n            Yes\r\n          </lx-button>\r\n        </template>\r\n\r\n        <lx-button typ=\"flat\" @click=\"$emit('close')\">\r\n          <template v-if=\"yesNo\">\r\n            No\r\n          </template>\r\n          <template v-else>\r\n            Close\r\n          </template>\r\n        </lx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxModal\",\r\n  emits: ['close', 'okay'],\r\n  props: {\r\n    typ: {\r\n      type: String,\r\n      default: 'info',\r\n      validator: (value:string) => {\r\n        return ['info', 'warning', 'error'].indexOf(value) !== -1\r\n      },\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    yesNo: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    show: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    the_title():string {\r\n      if (!this.title) {\r\n        switch (this.typ) {\r\n          case 'info':\r\n            return 'Information'\r\n          case 'warning':\r\n            return 'Warning'\r\n          case 'error':\r\n            return 'Error'\r\n          default:\r\n            return ''\r\n        }\r\n      }\r\n      return this.title\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"main-modal fixed w-full h-100 inset-0 z-50 overflow-hidden flex justify-center items-center animated fadeIn faster\"\r\n    style=\"background: rgba(0,0,0,.7);\" v-show=\"show\" @click=\"$emit('close')\">\r\n    <div class=\"md:w-1/3 sm:w-full rounded-lg shadow-lg bg-white my-3\">\r\n      <div class=\"flex justify-between border-b border-gray-100 px-5 py-4\">\r\n        <div class=\"flex\">\r\n\r\n          <!--        Info -->\r\n          <template v-if=\"typ === 'info'\">\r\n            <svg class=\"w-6 mr-2 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                 stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n            </svg>\r\n          </template>\r\n\r\n          <!--        Warning -->\r\n          <template v-if=\"typ === 'warning'\">\r\n            <svg class=\"w-6 mr-2 text-yellow-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                 stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\r\n            </svg>\r\n          </template>\r\n\r\n          <!--        Error -->\r\n          <template v-if=\"typ === 'error'\">\r\n            <svg class=\"w-6 mr-2 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                 stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\r\n            </svg>\r\n\r\n          </template>\r\n\r\n          <span class=\"font-bold text-gray-700 text-lg\">{{ the_title }}</span>\r\n\r\n        </div>\r\n        <div>\r\n          <button @click=\"$emit('close')\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\r\n                 class=\"w-4 h-4 text-red-500 hover:text-red-600 transition duration-150\">\r\n              <path fill=\"currentColor\"\r\n                    d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\r\n                    class=\"\"></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"px-10 py-5 text-gray-600\">\r\n        <slot></slot>\r\n      </div>\r\n\r\n      <div class=\"px-5 py-4 flex justify-end\">\r\n        <template v-if=\"yesNo\">\r\n          <lx-button typ=\"flat\" @click=\"$emit('okay')\">\r\n            Yes\r\n          </lx-button>\r\n        </template>\r\n\r\n        <lx-button typ=\"flat\" @click=\"$emit('close')\">\r\n          <template v-if=\"yesNo\">\r\n            No\r\n          </template>\r\n          <template v-else>\r\n            Close\r\n          </template>\r\n        </lx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\"\r\n\r\nexport default defineComponent({\r\n  name: \"lxModal\",\r\n  emits: ['close', 'okay'],\r\n  props: {\r\n    typ: {\r\n      type: String,\r\n      default: 'info',\r\n      validator: (value:string) => {\r\n        return ['info', 'warning', 'error'].indexOf(value) !== -1\r\n      },\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    yesNo: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    show: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    the_title():string {\r\n      if (!this.title) {\r\n        switch (this.typ) {\r\n          case 'info':\r\n            return 'Information'\r\n          case 'warning':\r\n            return 'Warning'\r\n          case 'error':\r\n            return 'Error'\r\n          default:\r\n            return ''\r\n        }\r\n      }\r\n      return this.title\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<script lang=\"ts\">\nimport {defineComponent} from 'vue'\n\nexport default defineComponent({\n  name: \"lxSearchHelp\",\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: String,\n    readonly: {type: Boolean, default: false},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    helpTitle: String,\n    tableHeader: Array,\n    tableContent: Array,\n    keyField: {type: String, default: 'id'},\n    valueField: {type: String, default: 'name'},\n  },\n  setup() {\n\n  },\n  data() {\n    return ({\n      selectedKey: this.modelValue,\n      value: '',\n      showModal: false,\n    })\n  },\n  created() {\n    this.selectedKey = this.modelValue\n    this.value = this.getSelected()\n  },\n  methods: {\n    onCancelClick(e: any) {\n      if (e.target.classList.contains('lx-modal-closable')) {\n        e.stopPropagation()\n        this.showModal = false\n      }\n    },\n    onRowClick(e: any) {\n      this.selectedKey = e[this.keyField]\n      this.value = this.getSelected()\n      this.showModal = false\n      this.$emit('update:modelValue', this.selectedKey)\n    },\n    getSelected() {\n      const find: any = this.tableContent?.find((itm: any) => itm[this.keyField] == this.selectedKey)\n      if (find) {\n        return find[this.valueField]\n      } else {\n        return ''\n      }\n    }\n  },\n  watch:{\n    tableContent(){\n      this.selectedKey = this.modelValue\n      this.value = this.getSelected()\n    }\n  }\n})\n</script>\n\n<template>\n  <lx-input :readonly=\"true\" :label=\"label\"\n            :empty-label=\"emptyLabel\" :placeholder=\"placeholder\" v-model=\"value\">\n    <template #append>\n      <div class=\"text-gray-400 hover:text-gray-500 cursor-pointer\" @click=\"showModal = !showModal\">\n        <svg class=\"w-5 h-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n          <path fill=\"currentColor\"\n                d=\"M464 0H144c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48v-48h48c26.51 0 48-21.49 48-48V48c0-26.51-21.49-48-48-48zm-80 464c0 8.82-7.18 16-16 16H48c-8.82 0-16-7.18-16-16V144c0-8.82 7.18-16 16-16h48v240c0 26.51 21.49 48 48 48h240v48zm96-96c0 8.82-7.18 16-16 16H144c-8.82 0-16-7.18-16-16V48c0-8.82 7.18-16 16-16h320c8.82 0 16 7.18 16 16v320z\"></path>\n        </svg>\n      </div>\n    </template>\n  </lx-input>\n\n  <div\n    class=\"lx-modal-closable main-modal fixed w-full h-100 inset-0 z-50 overflow-hidden flex justify-center items-center animated fadeIn faster\"\n    style=\"background: rgba(0,0,0,.7);\" v-show=\"showModal\" @click=\"onCancelClick\">\n    <div class=\"md:w-2/3 sm:w-full rounded-lg shadow-lg bg-white my-3 max-h-screen\">\n      <div class=\"flex justify-between border-b border-gray-100 px-5 py-4\">\n        <div class=\"flex\">\n\n          <span class=\"font-bold text-gray-700 text-lg\">{{ helpTitle }}</span>\n\n        </div>\n        <div>\n          <button class=\"lx-modal-closable\" @click=\"onCancelClick\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\n                 class=\"lx-modal-closable w-4 h-4 text-red-500 hover:text-red-600 transition duration-150\">\n              <path fill=\"currentColor\"\n                    d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\n                    class=\"lx-modal-closable\"></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"px-10 py-5 text-gray-600\">\n        <!--        content-->\n        <lx-table :header=\"tableHeader\" :data=\"tableContent\" :checkboxes=\"false\"\n                  @row-click=\"onRowClick\"></lx-table>\n        <!--        /content-->\n      </div>\n\n      <div class=\"px-5 py-4 flex justify-end\">\n        <!--        <template v-if=\"yesNo\">-->\n        <!--          <lx-button typ=\"flat\" @click=\"$emit('okay')\">-->\n        <!--            Yes-->\n        <!--          </lx-button>-->\n        <!--        </template>-->\n\n        <lx-button class=\"lx-modal-closable\" typ=\"flat\" @click=\"onCancelClick\">\n          Cancel\n        </lx-button>\n      </div>\n    </div>\n  </div>\n</template>\n","import {App, Plugin} from 'vue';\n\n// Import vue components\nimport * as components from '@/lib-components/index';\n\nimport '@/lib-components/styles/index.scss'\n\n// install function executed by Vue.use()\nconst install: Exclude<Plugin['install'], undefined> = function installLexxUiVue3(app: App) {\n  Object.entries(components).forEach(([componentName, component]) => {\n    // @ts-ignore\n    app.component(componentName, component);\n  });\n};\n\n// Create module definition for Vue.use()\nexport default install;\n\n// To allow individual component use, export components\n// each can be registered via Vue.component()\nexport * from '@/lib-components/index';\n","// iife/cjs usage extends esm default export - so import it all\r\nimport plugin, * as components from '@/entry.esm';\r\n\r\n// Attach named exports directly to plugin. IIFE/CJS will\r\n// only expose one global var, with component exports exposed as properties of\r\n// that global var (eg. plugin.component)\r\ntype NamedExports = Exclude<typeof components, 'default'>;\r\ntype ExtendedPlugin = typeof plugin & NamedExports;\r\nObject.entries(components).forEach(([componentName, component]) => {\r\n  if (componentName !== 'default') {\r\n    // plugin[componentName] = component;\r\n    const key = componentName as Exclude<keyof NamedExports, 'default'>;\r\n    const val = component as Exclude<ExtendedPlugin, typeof plugin>;\r\n    (plugin as ExtendedPlugin)[key] = val;\r\n  }\r\n});\r\n\r\nexport default plugin;\r\n"],"names":["Styl","Typ","Size","defineComponent","name","props","styl","type","String","validator","value","primary","secondary","success","danger","info","warning","dark","light","indexOf","default","typ","none","flat","rounded","pill","outline","Boolean","iconed","disabled","size","md","lg","sm","to","methods","getCss","css","push","this","join","hasHeaderSlot","$slots","header","hasFooterSlot","footer","class","_createBlock","_hoisted_1","_createVNode","_ctx","_renderSlot","open","data","isSidebarOpen","hasBrandSlot","brand","onToggleSidebar","$emit","emits","watch","val","xmlns","fill","viewBox","stroke","d","onKeydown","innerWidth","tabindex","onClick","_hoisted_2","_hoisted_3","_hoisted_4","href","active","count","Number","firstLetter","a","el","text","textContent","charAt","hasSvgSlot","svg","_hoisted_5","_hoisted_6","expanded","sidebarOpen","right","role","checkboxes","Array","checkAll","map","itm","checked","components","LxButton","total","itemsPerPage","currentPage","prevButtonText","nextButtonText","currentPageSync","onPageClick","num","onChangePage","dif","pageCount","canPrev","canNext","computed","res","Math","ceil","newVal","i","modelValue","readonly","commitTimout","label","labelSize","emptyLabel","placeholder","timer","uid","genUid","colcount","hasAppend","hasPrepend","labelClass","onInput","e","that","clearTimeout","global","setTimeout","bind","random","toString","substr","for","id","$event","target","lxSelectInputCheckmark","options","multiple","optionTitleField","optionValueField","created","window","addEventListener","stopPropagation","_this","$el","contains","dataset","includes","tagName","parentElement","root","selectedOption","find","_this2","onOptionSelect","onEscape","onArrowUp","onArrowDown","onChoose","getValue","opt","item","title","subheader","onStateChange","onChange","textTrue","textFalse","yesNo","show","the_title","style","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","helpTitle","tableHeader","tableContent","keyField","valueField","setup","selectedKey","showModal","getSelected","onCancelClick","classList","onRowClick","_this$tableContent","install","app","Object","entries","forEach","componentName","component","plugin"],"mappings":"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"}