{"version":3,"file":"lexx-ui-vue3.min.js","sources":["../src/lib-components/lxButton/lxButton.vue","../src/lib-components/lxButton/lxButton.vue?vue&type=template&id=05634e5e&lang.js","../src/lib-components/lxCard/lxCard.vue","../src/lib-components/lxCard/lxCard.vue?vue&type=template&id=33b1af53&lang.js","../src/lib-components/lxSidebar/lxSidebar.vue","../src/lib-components/lxSidebar/lxSidebar.vue?vue&type=template&id=463fedcb&lang.js","../src/lib-components/lxSidebar/lxSidebarItem.vue","../src/lib-components/lxSidebar/lxSidebarItem.vue?vue&type=template&id=d358c166&lang.js","../src/lib-components/lxSidebar/lxSidebarDdItem.vue","../src/lib-components/lxSidebar/lxSidebarDdItem.vue?vue&type=template&id=170f99f1&lang.js","../src/lib-components/lxNavbar/lxNavbar.vue","../src/lib-components/lxNavbar/lxNavbar.vue?vue&type=template&id=635ea8cc&lang.js","../src/lib-components/lxNavbar/lxNavbarItem.vue","../src/lib-components/lxNavbar/lxNavbarItem.vue?vue&type=template&id=f59994fa&lang.js","../src/lib-components/lxNavbar/lxNavbarButton.vue","../src/lib-components/lxNavbar/lxNavbarButton.vue?vue&type=template&id=f54a441a&lang.js","../src/lib-components/lxDdMenu/lxDdMenu.vue","../src/lib-components/lxDdMenu/lxDdMenu.vue?vue&type=template&id=5fb91632&lang.js","../src/lib-components/lxDdMenu/lxDdMenuItem.vue","../src/lib-components/lxDdMenu/lxDdMenuItem.vue?vue&type=template&id=54dd413a&lang.js","../src/lib-components/lxTable/lxTable.vue","../src/lib-components/lxTable/lxTable.vue?vue&type=template&id=62bec3b0&lang.js","../src/lib-components/lxPagination/lxPagination.vue","../src/lib-components/lxPagination/lxPagination.vue?vue&type=template&id=fefa9ee2&lang.js","../src/lib-components/lxInput/lxInput.vue","../src/lib-components/lxInput/lxInput.vue?vue&type=template&id=2feca353&lang.js","../src/lib-components/lxInput/components/lxSelectInputCheckmark.vue","../src/lib-components/lxInput/components/lxSelectInputCheckmark.vue?vue&type=template&id=243ee8c0&lang.js","../src/lib-components/lxInput/lxSelectInput.vue","../src/lib-components/lxInput/lxSelectInput.vue?vue&type=template&id=7c28fd03&lang.js","../src/lib-components/lxInput/lxFileInput.vue","../src/lib-components/lxInput/lxFileInput.vue?vue&type=template&id=359c1e68&lang.js","../src/lib-components/lxInput/lxTextareaInput.vue","../src/lib-components/lxInput/lxTextareaInput.vue?vue&type=template&id=533362e5&lang.js","../src/lib-components/lxBadge/lxBadge.vue","../src/lib-components/lxBadge/lxBadge.vue?vue&type=template&id=5275869a&lang.js","../src/lib-components/lxPageTitle/lxPageTitle.vue","../src/lib-components/lxPageTitle/lxPageTitle.vue?vue&type=template&id=0d9f6390&lang.js","../src/lib-components/lxInput/lxCheckbox.vue","../src/lib-components/lxInput/lxCheckbox.vue?vue&type=template&id=24c46381&lang.js","../src/lib-components/lxInput/lxToggle.vue","../src/lib-components/lxInput/lxToggle.vue?vue&type=template&id=3a011519&lang.js","../src/lib-components/lxModal/lxModal.vue","../src/lib-components/lxModal/lxModal.vue?vue&type=template&id=066c6dc5&lang.js","../src/entry.esm.ts","../src/entry.ts"],"sourcesContent":["<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\" class=\"btn\" :class=\"getCss()\" :disabled=\"disabled\">\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <button class=\"btn\" :class=\"getCss()\" :disabled=\"disabled\">\n      <slot/>\n    </button>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue';\n\nexport default defineComponent({\n  name: \"lxButton\",\n  props: {\n    styl: {\n      type: String,\n      validator: (value: string) => {\n        return ['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light'].indexOf(value) !== -1\n      },\n      default: 'primary',\n    },\n    typ: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'flat', 'rounded', 'pill'].indexOf(value) !== -1\n      },\n      default: '',\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n    },\n    iconed: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'md', 'lg', 'sm'].indexOf(value) !== -1\n      },\n      default: '',\n    },\n    to: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(`btn-${this.styl}`)\n      css.push(this.typ !== '' ? `btn-${this.typ}` : '')\n      css.push(this.outline ? `btn-outline` : '')\n      css.push(this.iconed ? `btn-icon` : '')\n      css.push(this.disabled ? `btn-disabled` : '')\n      css.push(this.size !== '' ? `btn-${this.size}` : '')\n\n      return css.join(' ')\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\" class=\"btn\" :class=\"getCss()\" :disabled=\"disabled\">\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <button class=\"btn\" :class=\"getCss()\" :disabled=\"disabled\">\n      <slot/>\n    </button>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue';\n\nexport default defineComponent({\n  name: \"lxButton\",\n  props: {\n    styl: {\n      type: String,\n      validator: (value: string) => {\n        return ['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light'].indexOf(value) !== -1\n      },\n      default: 'primary',\n    },\n    typ: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'flat', 'rounded', 'pill'].indexOf(value) !== -1\n      },\n      default: '',\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n    },\n    iconed: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'md', 'lg', 'sm'].indexOf(value) !== -1\n      },\n      default: '',\n    },\n    to: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(`btn-${this.styl}`)\n      css.push(this.typ !== '' ? `btn-${this.typ}` : '')\n      css.push(this.outline ? `btn-outline` : '')\n      css.push(this.iconed ? `btn-icon` : '')\n      css.push(this.disabled ? `btn-disabled` : '')\n      css.push(this.size !== '' ? `btn-${this.size}` : '')\n\n      return css.join(' ')\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"max-w-2xl sm:px-6 lg:px-8\">\n    <div class=\"overflow-hidden shadow-md\" :class=\"dark?'text-gray-100':''\">\n\n      <div class=\"px-6 py-4 border-b font-bold uppercase\"\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\"\n           v-if=\"hasHeaderSlot()\">\n        <slot name=\"header\"/>\n      </div>\n\n      <div class=\"p-6 bg-white border-b\"\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\">\n        <slot></slot>\n      </div>\n\n      <div class=\"p-6 text-right\"\n           :class=\"dark?'bg-gray-800 border-gray-200':'bg-white border-gray-200'\"\n           v-if=\"hasFooterSlot()\">\n        <slot name=\"footer\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue'\n\nexport default defineComponent({\n  name: \"lxCard\",\n  props: {\n    dark: {\n      type: Boolean,\n      default: false,\n    }\n  },\n  methods: {\n    hasHeaderSlot():boolean {\n      return !!this.$slots.header\n    },\n    hasFooterSlot():boolean {\n      return !!this.$slots.footer\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"max-w-2xl sm:px-6 lg:px-8\">\n    <div class=\"overflow-hidden shadow-md\" :class=\"dark?'text-gray-100':''\">\n\n      <div class=\"px-6 py-4 border-b font-bold uppercase\"\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\"\n           v-if=\"hasHeaderSlot()\">\n        <slot name=\"header\"/>\n      </div>\n\n      <div class=\"p-6 bg-white border-b\"\n           :class=\"dark?'bg-gray-800 border-gray-600':'bg-white border-gray-200'\">\n        <slot></slot>\n      </div>\n\n      <div class=\"p-6 text-right\"\n           :class=\"dark?'bg-gray-800 border-gray-200':'bg-white border-gray-200'\"\n           v-if=\"hasFooterSlot()\">\n        <slot name=\"footer\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue'\n\nexport default defineComponent({\n  name: \"lxCard\",\n  props: {\n    dark: {\n      type: Boolean,\n      default: false,\n    }\n  },\n  methods: {\n    hasHeaderSlot():boolean {\n      return !!this.$slots.header\n    },\n    hasFooterSlot():boolean {\n      return !!this.$slots.footer\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <aside\n      @keydown.escape=\"window.innerWidth <= 1024 ? isSidebarOpen = false : ''\"\n      tabindex=\"-1\"\n      class=\"fixed inset-y-0 z-10 flex-shrink-0 w-64 bg-white border-r lg:static dark:border-indigo-800 dark:bg-darker focus:outline-none lx-sidebar\"\n      :class=\"{'-translate-x-full lg:translate-x-0 lg:w-20 md:w-5 lg:translate-x-5 sm:hidden lx-sidebar-closed': !isSidebarOpen}\">\n    <!-- sidebar header -->\n    <div class=\"flex items-center justify-between flex-shrink-0 p-2\"\n         :class=\"{'lg:justify-center': !isSidebarOpen}\"\n         v-if=\"hasBrandSlot()\"\n    >\n          <span class=\"p-2 text-xl font-semibold leading-8 tracking-wider uppercase whitespace-nowrap\">\n            <slot name=\"brand\"></slot>\n          </span>\n      <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md lg:hidden\">\n        <svg\n            class=\"w-6 h-6 text-gray-600\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n        >\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"flex flex-col h-full\">\n      <!-- Sidebar links -->\n      <nav aria-label=\"Main\" class=\"flex-1 px-2 py-4 pb-20 space-y-2 overflow-y-auto\">\n\n        <slot></slot>\n\n      </nav>\n\n      <!-- Sidebar footer -->\n      <slot name=\"footer\"></slot>\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebar\",\n  props: {\n    header: {\n      type: String\n    },\n    open: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return ({\n      isSidebarOpen: this.open,\n    })\n  },\n  methods: {\n    hasBrandSlot(){\n      return this.$slots.brand\n    },\n    onToggleSidebar(){\n      // console.log('lxSidebar', 'onToggleSidebar', !this.isSidebarOpen)\n      this.$emit('toggle', !this.isSidebarOpen)\n    }\n  },\n  emits: ['toggle'],\n  watch: {\n    isSidebarOpen(val) {\n      // console.log('lxSidebar', 'watch:isSidebarOpen', val)\n      this.$emit('toggle', val)\n    },\n    open(val){\n      // console.log('lxSidebar', 'watch:open', val)\n      this.isSidebarOpen = val\n    }\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <aside\n      @keydown.escape=\"window.innerWidth <= 1024 ? isSidebarOpen = false : ''\"\n      tabindex=\"-1\"\n      class=\"fixed inset-y-0 z-10 flex-shrink-0 w-64 bg-white border-r lg:static dark:border-indigo-800 dark:bg-darker focus:outline-none lx-sidebar\"\n      :class=\"{'-translate-x-full lg:translate-x-0 lg:w-20 md:w-5 lg:translate-x-5 sm:hidden lx-sidebar-closed': !isSidebarOpen}\">\n    <!-- sidebar header -->\n    <div class=\"flex items-center justify-between flex-shrink-0 p-2\"\n         :class=\"{'lg:justify-center': !isSidebarOpen}\"\n         v-if=\"hasBrandSlot()\"\n    >\n          <span class=\"p-2 text-xl font-semibold leading-8 tracking-wider uppercase whitespace-nowrap\">\n            <slot name=\"brand\"></slot>\n          </span>\n      <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md lg:hidden\">\n        <svg\n            class=\"w-6 h-6 text-gray-600\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n        >\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"flex flex-col h-full\">\n      <!-- Sidebar links -->\n      <nav aria-label=\"Main\" class=\"flex-1 px-2 py-4 pb-20 space-y-2 overflow-y-auto\">\n\n        <slot></slot>\n\n      </nav>\n\n      <!-- Sidebar footer -->\n      <slot name=\"footer\"></slot>\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebar\",\n  props: {\n    header: {\n      type: String\n    },\n    open: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return ({\n      isSidebarOpen: this.open,\n    })\n  },\n  methods: {\n    hasBrandSlot(){\n      return this.$slots.brand\n    },\n    onToggleSidebar(){\n      // console.log('lxSidebar', 'onToggleSidebar', !this.isSidebarOpen)\n      this.$emit('toggle', !this.isSidebarOpen)\n    }\n  },\n  emits: ['toggle'],\n  watch: {\n    isSidebarOpen(val) {\n      // console.log('lxSidebar', 'watch:isSidebarOpen', val)\n      this.$emit('toggle', val)\n    },\n    open(val){\n      // console.log('lxSidebar', 'watch:open', val)\n      this.isSidebarOpen = val\n    }\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\"\n                 class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </router-link>\n  </template>\n  <template v-else>\n    <a\n      :href=\"href\"\n      class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n      :class=\"{ 'text-gray-600 bg-gray-100 active':active }\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebarItem\",\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    count: {\n      type: Number,\n      default: 0\n    },\n  },\n  methods: {\n    firstLetter(): string {\n      // @ts-ignore\n      const a = this.$slots.default()\n      const text = a[0]?.el?.textContent\n      return text ? text.charAt(0) : '';\n    },\n    hasSvgSlot() {\n      return !!this.$slots.svg\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\"\n                 class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </router-link>\n  </template>\n  <template v-else>\n    <a\n      :href=\"href\"\n      class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600 sidebar-item\"\n      :class=\"{ 'text-gray-600 bg-gray-100 active':active }\"\n    >\n      <span v-if=\"hasSvgSlot()\"\n            class=\"flex items-center justify-center text-lg text-gray-400\">\n        <slot name=\"svg\"></slot>\n      </span>\n\n      <span v-if=\"!hasSvgSlot()\" class=\"sidebar-item-caption\">{{ firstLetter() }}</span>\n      <span class=\"text-sm ml-2 sidebar-item-text\"\n            :class=\"{'ml-7':hasSvgSlot}\">\n        <slot></slot>\n      </span>\n      <span v-if=\"count !== 0\"\n            class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n{{ count }}\n      </span>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebarItem\",\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    count: {\n      type: Number,\n      default: 0\n    },\n  },\n  methods: {\n    firstLetter(): string {\n      // @ts-ignore\n      const a = this.$slots.default()\n      const text = a[0]?.el?.textContent\n      return text ? text.charAt(0) : '';\n    },\n    hasSvgSlot() {\n      return !!this.$slots.svg\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <a\n    href=\"#\"\n    @click=\"expanded = !expanded\"\n    class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600\"\n    :class=\"{'text-gray-600 bg-gray-100':active}\"\n  >\n    <span v-if=\"hasSvgSlot()\"\n          class=\"flex items-center justify-center text-lg text-gray-400\">\n      <slot name=\"svg\"></slot>\n    </span>\n    <span class=\"text-sm\"\n          :class=\"hasSvgSlot()?'ml-2':'ml-7'\">\n      <slot></slot>\n    </span>\n    <span v-if=\"count !== 0\"\n          class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n    {{ count }}\n    </span>\n    <span class=\"ml-auto\">\n      <svg\n        class=\"w-4 h-4 transition-transform transform\"\n        :class=\"{ 'rotate-180': expanded }\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\n      </svg>\n    </span>\n  </a>\n  <div class=\"mt-2 space-y-2 sidebar-submenu\" v-if=\"expanded\">\n    <slot name=\"submenu\"></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebarDdItem\",\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    count: {\n      type: Number,\n      default: 0\n    },\n  },\n  data() {\n    return ({\n      expanded: false,\n    })\n  },\n  methods: {\n    hasSvgSlot() {\n      return !!this.$slots.svg\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <a\n    href=\"#\"\n    @click=\"expanded = !expanded\"\n    class=\"flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-indigo-100 dark:hover:bg-indigo-600\"\n    :class=\"{'text-gray-600 bg-gray-100':active}\"\n  >\n    <span v-if=\"hasSvgSlot()\"\n          class=\"flex items-center justify-center text-lg text-gray-400\">\n      <slot name=\"svg\"></slot>\n    </span>\n    <span class=\"text-sm\"\n          :class=\"hasSvgSlot()?'ml-2':'ml-7'\">\n      <slot></slot>\n    </span>\n    <span v-if=\"count !== 0\"\n          class=\"flex items-center justify-center text-sm text-gray-500 font-semibold bg-gray-200 h-6 px-2 rounded-full ml-auto\">\n    {{ count }}\n    </span>\n    <span class=\"ml-auto\">\n      <svg\n        class=\"w-4 h-4 transition-transform transform\"\n        :class=\"{ 'rotate-180': expanded }\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\n      </svg>\n    </span>\n  </a>\n  <div class=\"mt-2 space-y-2 sidebar-submenu\" v-if=\"expanded\">\n    <slot name=\"submenu\"></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSidebarDdItem\",\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    count: {\n      type: Number,\n      default: 0\n    },\n  },\n  data() {\n    return ({\n      expanded: false,\n    })\n  },\n  methods: {\n    hasSvgSlot() {\n      return !!this.$slots.svg\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <header class=\"flex-shrink-0 border-b bg-white\">\n    <div class=\"flex items-center justify-between p-2\">\n      <!-- Navbar left -->\n      <div class=\"flex items-center space-x-3\">\n\n        <!-- Toggle sidebar button -->\n        <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md focus:outline-none focus:ring\">\n          <svg\n              class=\"w-4 h-4 text-gray-600\"\n              :class=\"{'transform transition-transform -rotate-180': isSidebarOpen}\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"/>\n          </svg>\n        </button>\n\n        <span class=\"p-2 text-xl font-semibold tracking-wider uppercase\" v-if=\"hasBrandSlot()\">\n          <slot name=\"brand\"></slot>\n        </span>\n\n        <slot name=\"left\"></slot>\n\n      </div>\n\n      <!-- Navbar right -->\n      <div class=\"relative flex items-center space-x-3\">\n        <slot></slot>\n\n      </div>\n    </div>\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxNavbar\",\n  props: {\n    sidebarOpen: {\n      type: Boolean,\n      default: true,\n    }\n  },\n  data() {\n    return ({\n      isSidebarOpen: this.sidebarOpen,\n    })\n  },\n  methods: {\n    hasBrandSlot() {\n      return this.$slots.brand\n    },\n    onToggleSidebar() {\n      // console.log('lxNavbar', 'toggleSidebar', !this.isSidebarOpen)\n      this.$emit('toggleSidebar', !this.isSidebarOpen)\n    }\n  },\n  emits: ['toggleSidebar'],\n  watch: {\n    isSidebarOpen(val) {\n      // console.log('lxNavbar', 'watch:isSidebarOpen', val)\n      this.$emit('toggleSidebar', val)\n    },\n    sidebarOpen(val){\n      // console.log('lxNavbar', 'watch:sidebarOpen', val)\n      this.isSidebarOpen = val\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <header class=\"flex-shrink-0 border-b bg-white\">\n    <div class=\"flex items-center justify-between p-2\">\n      <!-- Navbar left -->\n      <div class=\"flex items-center space-x-3\">\n\n        <!-- Toggle sidebar button -->\n        <button @click=\"onToggleSidebar\" class=\"p-2 rounded-md focus:outline-none focus:ring\">\n          <svg\n              class=\"w-4 h-4 text-gray-600\"\n              :class=\"{'transform transition-transform -rotate-180': isSidebarOpen}\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\"/>\n          </svg>\n        </button>\n\n        <span class=\"p-2 text-xl font-semibold tracking-wider uppercase\" v-if=\"hasBrandSlot()\">\n          <slot name=\"brand\"></slot>\n        </span>\n\n        <slot name=\"left\"></slot>\n\n      </div>\n\n      <!-- Navbar right -->\n      <div class=\"relative flex items-center space-x-3\">\n        <slot></slot>\n\n      </div>\n    </div>\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxNavbar\",\n  props: {\n    sidebarOpen: {\n      type: Boolean,\n      default: true,\n    }\n  },\n  data() {\n    return ({\n      isSidebarOpen: this.sidebarOpen,\n    })\n  },\n  methods: {\n    hasBrandSlot() {\n      return this.$slots.brand\n    },\n    onToggleSidebar() {\n      // console.log('lxNavbar', 'toggleSidebar', !this.isSidebarOpen)\n      this.$emit('toggleSidebar', !this.isSidebarOpen)\n    }\n  },\n  emits: ['toggleSidebar'],\n  watch: {\n    isSidebarOpen(val) {\n      // console.log('lxNavbar', 'watch:isSidebarOpen', val)\n      this.$emit('toggleSidebar', val)\n    },\n    sidebarOpen(val){\n      // console.log('lxNavbar', 'watch:sidebarOpen', val)\n      this.isSidebarOpen = val\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\"\n                 class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\"\n    >\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <a :href=\"href\"\n       class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\">\n      <slot></slot>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxNavbarItem\",\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"$router && !!to\">\n    <router-link :to=\"to\"\n                 class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\"\n    >\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <a :href=\"href\"\n       class=\"flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal no-underline flex items-center hover:bg-gray-200\">\n      <slot></slot>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxNavbarItem\",\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    to: {\n      type: String,\n      default: ''\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <button\n      class=\"p-2 bg-gray-100 rounded-full focus:outline-none focus:ring hover:bg-gray-200\"\n  >\n    <slot></slot>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxNavbarButton\"\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <button\n      class=\"p-2 bg-gray-100 rounded-full focus:outline-none focus:ring hover:bg-gray-200\"\n  >\n    <slot></slot>\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxNavbarButton\"\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"absolute top-full py-2 w-48 bg-white rounded-md shadow-xl z-20 lx-dropdown-menu\"\n       :class=\"right?'right-0':'left-0'\"\n  role=\"dropdown-menu\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxDdMenu\",\n  props: {\n    right: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return ({\n\n    })\n  },\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"absolute top-full py-2 w-48 bg-white rounded-md shadow-xl z-20 lx-dropdown-menu\"\n       :class=\"right?'right-0':'left-0'\"\n  role=\"dropdown-menu\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxDdMenu\",\n  props: {\n    right: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return ({\n\n    })\n  },\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"!!$router && to\">\n    <router-link class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\"\n                 :to=\"to\">\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <a :href=\"href\"\n       class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\">\n      <slot></slot>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxDdMenuItem\",\n  props: {\n    to: {\n      type: String\n    },\n    href: {\n      type: String,\n      default: ''\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <template v-if=\"!!$router && to\">\n    <router-link class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\"\n                 :to=\"to\">\n      <slot></slot>\n    </router-link>\n  </template>\n  <template v-else>\n    <a :href=\"href\"\n       class=\"block px-4 py-2 text-sm text-left capitalize text-gray-700 hover:bg-blue-500 hover:text-white\">\n      <slot></slot>\n    </a>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxDdMenuItem\",\n  props: {\n    to: {\n      type: String\n    },\n    href: {\n      type: String,\n      default: ''\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <table class=\"border-collapse shadow-sm bg-white border-t-3 border-blue-400 lx-table-zebra w-full\">\n    <thead>\n    <tr>\n      <th v-if=\"checkboxes\" class=\"px-3 py-3 text-sm text-left w-3\">\n        <input type=\"checkbox\" v-model=\"checkAll\"/>\n      </th>\n      <th v-for=\"h in header\" class=\"px-3 py-3 text-sm text-left\" :class=\"h.css\">{{ h.title }}</th>\n    </tr>\n    </thead>\n    <tfoot></tfoot>\n    <tbody>\n    <template v-if=\"data.length > 0\">\n      <tr v-for=\"itm in data\" class=\"hover:bg-gray-100\">\n        <td v-if=\"checkboxes\" class=\"px-3 py-3 text-sm\">\n          <input type=\"checkbox\" :data-id=\"itm.id\" v-model=\"itm.checked\"/>\n        </td>\n        <template v-for=\"h in header\">\n          <td v-if=\"typeof($slots[h.key]) !== 'undefined'\" class=\"px-3 py-3 text-sm\">\n            <slot :name=\"h.key\" :field=\"h\" :item=\"itm\"></slot>\n          </td>\n          <td v-else class=\"px-3 py-3 text-sm\">\n            {{ itm[h.key] }}\n          </td>\n        </template>\n      </tr>\n    </template>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\ninterface LxTableData {\n  checkAll: boolean\n}\n\nexport default defineComponent({\n  name: \"lxTable\",\n  props: {\n    checkboxes: {\n      type: Boolean,\n      default: true\n    },\n    header: {\n      type: Array,\n      default: []\n    },\n    data: {\n      type: Array,\n      default: []\n    }\n  },\n  data():LxTableData {\n    return ({\n      checkAll: false,\n    })\n  },\n  watch: {\n    checkAll(val:any) {\n      this.data.map((itm:any) => itm.checked = val)\n    },\n  },\n  methods: {}\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <table class=\"border-collapse shadow-sm bg-white border-t-3 border-blue-400 lx-table-zebra w-full\">\n    <thead>\n    <tr>\n      <th v-if=\"checkboxes\" class=\"px-3 py-3 text-sm text-left w-3\">\n        <input type=\"checkbox\" v-model=\"checkAll\"/>\n      </th>\n      <th v-for=\"h in header\" class=\"px-3 py-3 text-sm text-left\" :class=\"h.css\">{{ h.title }}</th>\n    </tr>\n    </thead>\n    <tfoot></tfoot>\n    <tbody>\n    <template v-if=\"data.length > 0\">\n      <tr v-for=\"itm in data\" class=\"hover:bg-gray-100\">\n        <td v-if=\"checkboxes\" class=\"px-3 py-3 text-sm\">\n          <input type=\"checkbox\" :data-id=\"itm.id\" v-model=\"itm.checked\"/>\n        </td>\n        <template v-for=\"h in header\">\n          <td v-if=\"typeof($slots[h.key]) !== 'undefined'\" class=\"px-3 py-3 text-sm\">\n            <slot :name=\"h.key\" :field=\"h\" :item=\"itm\"></slot>\n          </td>\n          <td v-else class=\"px-3 py-3 text-sm\">\n            {{ itm[h.key] }}\n          </td>\n        </template>\n      </tr>\n    </template>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\ninterface LxTableData {\n  checkAll: boolean\n}\n\nexport default defineComponent({\n  name: \"lxTable\",\n  props: {\n    checkboxes: {\n      type: Boolean,\n      default: true\n    },\n    header: {\n      type: Array,\n      default: []\n    },\n    data: {\n      type: Array,\n      default: []\n    }\n  },\n  data():LxTableData {\n    return ({\n      checkAll: false,\n    })\n  },\n  watch: {\n    checkAll(val:any) {\n      this.data.map((itm:any) => itm.checked = val)\n    },\n  },\n  methods: {}\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"btn-group\">\n\n    <lx-button :disabled=\"!canPrev()\" @click=\"onChangePage(-1)\">{{ prevButtonText }}</lx-button>\n    <template v-for=\"i in pageCount\">\n      <lx-button :disabled=\"i === currentPageSync\" @click=\"onPageClick(i)\">{{ i }}</lx-button>\n    </template>\n    <lx-button :disabled=\"!canNext()\" @click=\"onChangePage(1)\">{{ nextButtonText }}</lx-button>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue'\nimport LxButton from \"@/lib-components/lxButton/lxButton.vue\";\n\nexport default defineComponent({\n  name: \"lxPagination\",\n  components: {LxButton},\n  props: {\n    total: {type: Number, default: 1},\n    itemsPerPage: {type: Number, default: 10},\n    currentPage: {type: Number, default: 1},\n    prevButtonText: {type: String, default: 'Previous'},\n    nextButtonText: {type: String, default: 'Next'},\n  },\n  data():any {\n    return ({\n      currentPageSync: this.currentPage,\n    })\n  },\n  methods: {\n    onPageClick(num:number) {\n      this.currentPageSync = num\n      this.$emit('pagechange', this.currentPageSync)\n    },\n    onChangePage(dif:number) {\n      this.currentPageSync += dif\n      this.currentPageSync = this.currentPageSync < 1 ? 1 : this.currentPageSync\n      this.currentPageSync = this.currentPageSync > this.pageCount ? this.pageCount : this.currentPageSync\n      this.$emit('pagechange', this.currentPageSync)\n    },\n    canPrev():boolean {\n      return this.currentPageSync > 1\n    },\n    canNext():boolean {\n      return this.currentPageSync < this.pageCount\n    }\n  },\n  computed: {\n    pageCount():number {\n      const res = Math.ceil(this.total / this.itemsPerPage)\n      return res === 0 ? 1 : res\n    }\n  },\n  watch: {\n    currentPage(newVal:number) {\n      this.currentPageSync = newVal\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"btn-group\">\n\n    <lx-button :disabled=\"!canPrev()\" @click=\"onChangePage(-1)\">{{ prevButtonText }}</lx-button>\n    <template v-for=\"i in pageCount\">\n      <lx-button :disabled=\"i === currentPageSync\" @click=\"onPageClick(i)\">{{ i }}</lx-button>\n    </template>\n    <lx-button :disabled=\"!canNext()\" @click=\"onChangePage(1)\">{{ nextButtonText }}</lx-button>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from 'vue'\nimport LxButton from \"@/lib-components/lxButton/lxButton.vue\";\n\nexport default defineComponent({\n  name: \"lxPagination\",\n  components: {LxButton},\n  props: {\n    total: {type: Number, default: 1},\n    itemsPerPage: {type: Number, default: 10},\n    currentPage: {type: Number, default: 1},\n    prevButtonText: {type: String, default: 'Previous'},\n    nextButtonText: {type: String, default: 'Next'},\n  },\n  data():any {\n    return ({\n      currentPageSync: this.currentPage,\n    })\n  },\n  methods: {\n    onPageClick(num:number) {\n      this.currentPageSync = num\n      this.$emit('pagechange', this.currentPageSync)\n    },\n    onChangePage(dif:number) {\n      this.currentPageSync += dif\n      this.currentPageSync = this.currentPageSync < 1 ? 1 : this.currentPageSync\n      this.currentPageSync = this.currentPageSync > this.pageCount ? this.pageCount : this.currentPageSync\n      this.$emit('pagechange', this.currentPageSync)\n    },\n    canPrev():boolean {\n      return this.currentPageSync > 1\n    },\n    canNext():boolean {\n      return this.currentPageSync < this.pageCount\n    }\n  },\n  computed: {\n    pageCount():number {\n      const res = Math.ceil(this.total / this.itemsPerPage)\n      return res === 0 ? 1 : res\n    }\n  },\n  watch: {\n    currentPage(newVal:number) {\n      this.currentPageSync = newVal\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"flex flex-col\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"text-md\">{{ label }}</label>\n    </template>\n\n    <div class=\"input-container flex\">\n\n      <div\n        class=\"shadow-sm border rounded rounded-r-none border-r-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention prepend\"\n        v-if=\"hasPrepend\">\n        <slot name=\"prepend\"></slot>\n      </div>\n      <!--suppress HtmlFormInputWithoutLabel -->\n      <input :type=\"type\" :id=\"uid\" :placeholder=\"placeholder\" :readonly=\"readonly\"\n             @input=\"onInput($event.target.value)\" :value=\"modelValue\"\n             class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\n             :class=\"{'rounded-l-none':hasPrepend, 'rounded-r-none':hasAppend}\"\n      />\n      <div\n        class=\"shadow-sm border rounded rounded-l-none border-l-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention append\"\n        v-if=\"hasAppend\">\n        <slot name=\"append\"></slot>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxInput\",\n  emits: ['update:modelValue', 'input'],\n\n  props: {\n    modelValue: String,\n    readonly: {type: Boolean, default: false},\n    commitTimout: {\n      type: Number,\n      default: 0\n    },\n    label: {type: String, default: ''},\n    size: {\n      type: String,\n      default: '',\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n    },\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    emptyLabel: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n\n    type: {\n      type: String,\n      default: 'text',\n      validator: (value: string) => {\n        return ['text', 'number', 'email', 'phone', 'password'].indexOf(value) !== -1\n      },\n    },\n  },\n\n  data() {\n    return ({\n      timer: 0,\n      uid: this.genUid(),\n    })\n  },\n  computed: {\n    colcount() {\n      if (this.hasAppend && this.hasPrepend) {\n        return 3\n      }\n      if (this.hasAppend || this.hasPrepend) {\n        return 2\n      }\n      return 1\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n  methods: {\n    onInput(e: any) {\n      const that = this\n      if (+this.commitTimout > 0) {\n        if (!!this.timer)\n          clearTimeout(this.timer)\n        this.timer = +global.setTimeout(function () {\n          that.$emit('input', e)\n        }.bind(this), this.commitTimout)\n      } else {\n        this.$emit('input', e)\n      }\n      this.$emit('update:modelValue', e)\n    },\n    getCss(): string {\n      const css: string[] = []\n      css.push(this.readonly ? 'readonly' : '')\n      // css.push(this.size ? `input-group-${this.size}` : '')\n      if (this.size) {\n        css.push(`input-group-${this.size}`)\n      }\n      return css.join(' ')\n    },\n    genUid():string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"flex flex-col\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"text-md\">{{ label }}</label>\n    </template>\n\n    <div class=\"input-container flex\">\n\n      <div\n        class=\"shadow-sm border rounded rounded-r-none border-r-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention prepend\"\n        v-if=\"hasPrepend\">\n        <slot name=\"prepend\"></slot>\n      </div>\n      <!--suppress HtmlFormInputWithoutLabel -->\n      <input :type=\"type\" :id=\"uid\" :placeholder=\"placeholder\" :readonly=\"readonly\"\n             @input=\"onInput($event.target.value)\" :value=\"modelValue\"\n             class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\n             :class=\"{'rounded-l-none':hasPrepend, 'rounded-r-none':hasAppend}\"\n      />\n      <div\n        class=\"shadow-sm border rounded rounded-l-none border-l-0 flex-none py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline input-extention append\"\n        v-if=\"hasAppend\">\n        <slot name=\"append\"></slot>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxInput\",\n  emits: ['update:modelValue', 'input'],\n\n  props: {\n    modelValue: String,\n    readonly: {type: Boolean, default: false},\n    commitTimout: {\n      type: Number,\n      default: 0\n    },\n    label: {type: String, default: ''},\n    size: {\n      type: String,\n      default: '',\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n    },\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    emptyLabel: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n\n    type: {\n      type: String,\n      default: 'text',\n      validator: (value: string) => {\n        return ['text', 'number', 'email', 'phone', 'password'].indexOf(value) !== -1\n      },\n    },\n  },\n\n  data() {\n    return ({\n      timer: 0,\n      uid: this.genUid(),\n    })\n  },\n  computed: {\n    colcount() {\n      if (this.hasAppend && this.hasPrepend) {\n        return 3\n      }\n      if (this.hasAppend || this.hasPrepend) {\n        return 2\n      }\n      return 1\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n  methods: {\n    onInput(e: any) {\n      const that = this\n      if (+this.commitTimout > 0) {\n        if (!!this.timer)\n          clearTimeout(this.timer)\n        this.timer = +global.setTimeout(function () {\n          that.$emit('input', e)\n        }.bind(this), this.commitTimout)\n      } else {\n        this.$emit('input', e)\n      }\n      this.$emit('update:modelValue', e)\n    },\n    getCss(): string {\n      const css: string[] = []\n      css.push(this.readonly ? 'readonly' : '')\n      // css.push(this.size ? `input-group-${this.size}` : '')\n      if (this.size) {\n        css.push(`input-group-${this.size}`)\n      }\n      return css.join(' ')\n    },\n    genUid():string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <!--  :class=\"{ 'text-white': activeIndex === 2, 'text-indigo-600': !(activeIndex === 2) }\"-->\n  <span class=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\" data-root=\"lx-dd-list\">\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 20 20\" fill=\"currentColor\">\n  <path fill-rule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n        clip-rule=\"evenodd\"></path>\n</svg>\n              </span>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSelectInputCheckmark\"\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <!--  :class=\"{ 'text-white': activeIndex === 2, 'text-indigo-600': !(activeIndex === 2) }\"-->\n  <span class=\"absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600\" data-root=\"lx-dd-list\">\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 20 20\" fill=\"currentColor\">\n  <path fill-rule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n        clip-rule=\"evenodd\"></path>\n</svg>\n              </span>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxSelectInputCheckmark\"\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div data-root=\"lx-dd-list\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"block text-sm font-medium text-gray-700\"\n             :class=\"labelClass\">{{ label }}</label>\n    </template>\n    <div class=\"mt-1 relative\">\n      <button type=\"button\"\n              class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              aria-haspopup=\"listbox\"\n              aria-expanded=\"true\"\n              aria-labelledby=\"listbox-label\"\n              @click=\"open = !open\"\n              data-root=\"lx-dd-list\"\n      >\n        <!--suppress HtmlUnknownTag -->\n        <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n          <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n            <slot name=\"item\" :item=\"selectedOption\"></slot>\n          </template>\n          <template v-else>\n            <span\n              class=\"ml-3 block truncate font-semibold font-normal\">\n              {{ getValue(selectedOption) }}\n            </span>\n\n          </template>\n        </div>\n        <span class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n        <!-- Heroicon name: solid/selector -->\n        <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n        >\n          <path fill-rule=\"evenodd\"\n                d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"/>\n        </svg>\n      </span>\n      </button>\n\n      <ul v-show=\"open\"\n          class=\"z-40 absolute mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n          @keydown.enter.stop.prevent=\"onOptionSelect()\"\n          @keydown.space.stop.prevent=\"onOptionSelect()\"\n          @keydown.escape=\"onEscape()\"\n          @keydown.arrow-up.prevent=\"onArrowUp()\"\n          @keydown.arrow-down.prevent=\"onArrowDown()\"\n          tabindex=\"-1\"\n          role=\"listbox\"\n      >\n\n        <template v-for=\"opt in options\">\n          <li\n            class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9 hover:bg-indigo-600 hover:text-white\"\n            role=\"option\"\n            @click=\"onChoose(opt[optionValueField])\"\n          >\n            <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n              <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n                <slot name=\"item\" :item=\"opt\"></slot>\n              </template>\n              <template v-else>\n                {{ getValue(opt) }}\n              </template>\n            </div>\n            <template v-if=\"+opt[optionValueField] === +modelValue\">\n              <lx-select-input-checkmark class=\"\"/>\n            </template>\n          </li>\n        </template>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\nimport lxSelectInputCheckmark from \"@/lib-components/lxInput/components/lxSelectInputCheckmark.vue\";\n// import {default as VueClickAway} from \"vue3-click-away\"\n// import VueClickAwayPlugin, {default} from \"vue3-click-away\"\n// import mixin from \"vue3-click-away\";\n// import { mixin as VueClickAway } from \"vue3-click-away\";\n\n// const lxSelectInputCheckmark = require(\"@/lib-components/lxInput/components/lxSelectInputCheckmark\")\n\nexport default defineComponent({\n  name: \"lxSelectInput\",\n  emits: ['update:modelValue'],\n  // mixins: [mixin],\n  components: {lxSelectInputCheckmark},\n  props: {\n    modelValue: {type: String},\n    options: {type: Array, default: []},\n    multiple: {type: Boolean, default: false},\n    optionTitleField: {type: String, default: 'title'},\n    optionValueField: {type: String, default: 'id'},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      open: false,\n      uid: this.genUid(),\n    })\n  },\n  created() {\n    window.addEventListener('click', (e) => {\n      // e.preventDefault()\n      e.stopPropagation()\n      if (!this.$el.contains(e.target)) {\n        const el = e.target as HTMLElement\n        let dataset = el.dataset\n        if (['SPAN', 'IMG', 'SVG'].includes(el.tagName)) {\n          const parent = el.parentElement as HTMLElement\n          dataset = parent.dataset\n        }\n        if (dataset && !(dataset.root && dataset.root === 'lx-dd-list')) {\n          this.open = false\n        }\n      }\n    })\n  },\n  computed: {\n    selectedOption(): any {\n      // @ts-ignore\n      return this.options.find((i: number) => +i[this.optionValueField] === +this.modelValue)\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  }, // computed\n  methods: {\n    onOptionSelect() {\n    },\n    onEscape() {\n    },\n    onArrowUp() {\n    },\n    onArrowDown() {\n    },\n    onChoose(e: any) {\n      this.$emit('update:modelValue', `${e}`)\n      this.open = false\n    },\n    getValue(opt: any) {\n      if (!opt) {\n        return ''\n      }\n      return opt[this.optionTitleField]\n    },\n    getCss(): string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid(): string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    },\n  } // methods\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div data-root=\"lx-dd-list\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" class=\"block text-sm font-medium text-gray-700\"\n             :class=\"labelClass\">{{ label }}</label>\n    </template>\n    <div class=\"mt-1 relative\">\n      <button type=\"button\"\n              class=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              aria-haspopup=\"listbox\"\n              aria-expanded=\"true\"\n              aria-labelledby=\"listbox-label\"\n              @click=\"open = !open\"\n              data-root=\"lx-dd-list\"\n      >\n        <!--suppress HtmlUnknownTag -->\n        <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n          <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n            <slot name=\"item\" :item=\"selectedOption\"></slot>\n          </template>\n          <template v-else>\n            <span\n              class=\"ml-3 block truncate font-semibold font-normal\">\n              {{ getValue(selectedOption) }}\n            </span>\n\n          </template>\n        </div>\n        <span class=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n        <!-- Heroicon name: solid/selector -->\n        <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n        >\n          <path fill-rule=\"evenodd\"\n                d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"/>\n        </svg>\n      </span>\n      </button>\n\n      <ul v-show=\"open\"\n          class=\"z-40 absolute mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n          @keydown.enter.stop.prevent=\"onOptionSelect()\"\n          @keydown.space.stop.prevent=\"onOptionSelect()\"\n          @keydown.escape=\"onEscape()\"\n          @keydown.arrow-up.prevent=\"onArrowUp()\"\n          @keydown.arrow-down.prevent=\"onArrowDown()\"\n          tabindex=\"-1\"\n          role=\"listbox\"\n      >\n\n        <template v-for=\"opt in options\">\n          <li\n            class=\"text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9 hover:bg-indigo-600 hover:text-white\"\n            role=\"option\"\n            @click=\"onChoose(opt[optionValueField])\"\n          >\n            <div class=\"flex items-center\" data-root=\"lx-dd-list\">\n              <template v-if=\"typeof($slots['item']) !== 'undefined'\">\n                <slot name=\"item\" :item=\"opt\"></slot>\n              </template>\n              <template v-else>\n                {{ getValue(opt) }}\n              </template>\n            </div>\n            <template v-if=\"+opt[optionValueField] === +modelValue\">\n              <lx-select-input-checkmark class=\"\"/>\n            </template>\n          </li>\n        </template>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\nimport lxSelectInputCheckmark from \"@/lib-components/lxInput/components/lxSelectInputCheckmark.vue\";\n// import {default as VueClickAway} from \"vue3-click-away\"\n// import VueClickAwayPlugin, {default} from \"vue3-click-away\"\n// import mixin from \"vue3-click-away\";\n// import { mixin as VueClickAway } from \"vue3-click-away\";\n\n// const lxSelectInputCheckmark = require(\"@/lib-components/lxInput/components/lxSelectInputCheckmark\")\n\nexport default defineComponent({\n  name: \"lxSelectInput\",\n  emits: ['update:modelValue'],\n  // mixins: [mixin],\n  components: {lxSelectInputCheckmark},\n  props: {\n    modelValue: {type: String},\n    options: {type: Array, default: []},\n    multiple: {type: Boolean, default: false},\n    optionTitleField: {type: String, default: 'title'},\n    optionValueField: {type: String, default: 'id'},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      open: false,\n      uid: this.genUid(),\n    })\n  },\n  created() {\n    window.addEventListener('click', (e) => {\n      // e.preventDefault()\n      e.stopPropagation()\n      if (!this.$el.contains(e.target)) {\n        const el = e.target as HTMLElement\n        let dataset = el.dataset\n        if (['SPAN', 'IMG', 'SVG'].includes(el.tagName)) {\n          const parent = el.parentElement as HTMLElement\n          dataset = parent.dataset\n        }\n        if (dataset && !(dataset.root && dataset.root === 'lx-dd-list')) {\n          this.open = false\n        }\n      }\n    })\n  },\n  computed: {\n    selectedOption(): any {\n      // @ts-ignore\n      return this.options.find((i: number) => +i[this.optionValueField] === +this.modelValue)\n    },\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  }, // computed\n  methods: {\n    onOptionSelect() {\n    },\n    onEscape() {\n    },\n    onArrowUp() {\n    },\n    onArrowDown() {\n    },\n    onChoose(e: any) {\n      this.$emit('update:modelValue', `${e}`)\n      this.open = false\n    },\n    getValue(opt: any) {\n      if (!opt) {\n        return ''\n      }\n      return opt[this.optionTitleField]\n    },\n    getCss(): string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid(): string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    },\n  } // methods\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <!--  <div class=\"rounded border border-dashed  relative\"-->\n  <!--       :class=\"{'border-gray-300':readonly, 'border-gray-500':!readonly}\"-->\n  <!--  >-->\n  <!--    <input type=\"file\" multiple-->\n  <!--           class=\"cursor-pointer relative block opacity-0 w-full h-full p-20 z-50\"-->\n  <!--           :readonly=\"readonly\"-->\n  <!--           :disabled=\"readonly\"-->\n  <!--           @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"-->\n  <!--    >-->\n  <!--    <div class=\"text-center p-10 absolute top-0 right-0 left-0 m-auto\"-->\n  <!--         :class=\"{'text-gray-400':readonly}\">-->\n  <!--      {{ modelValue ? modelValue : label }}-->\n  <!--    </div>-->\n  <!--  </div>-->\n\n  <div class=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\"\n       :class=\"{'text-gray-400':readonly}\"\n  >\n    <div class=\"space-y-1 text-center\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"\n           aria-hidden=\"true\">\n        <path\n          d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n          stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      <div class=\"flex text-sm text-gray-600\">\n        <label :for=\"uid\"\n               class=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\">\n          <span>Upload a file</span>\n          <input id=\"uid\" name=\"file-upload\" type=\"file\"\n                 class=\"sr-only\"\n                 :readonly=\"readonly\"\n                 :disabled=\"readonly\"\n                 @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"\n          />\n        </label>\n        <p class=\"pl-1\">or drag and drop</p>\n      </div>\n      <p class=\"text-xs text-gray-500\">\n        PNG, JPG, GIF up to 10MB\n      </p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"lxFileInput\",\n  props: {\n    modelValue: String,\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator:  (value:string)=> {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator:  (value:string)=> {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  emits: ['update:modelValue'],\n  data() {\n    return ({\n      uid: this.genUid(),\n    })\n  },\n  methods:{\n    getCss():string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid():string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <!--  <div class=\"rounded border border-dashed  relative\"-->\n  <!--       :class=\"{'border-gray-300':readonly, 'border-gray-500':!readonly}\"-->\n  <!--  >-->\n  <!--    <input type=\"file\" multiple-->\n  <!--           class=\"cursor-pointer relative block opacity-0 w-full h-full p-20 z-50\"-->\n  <!--           :readonly=\"readonly\"-->\n  <!--           :disabled=\"readonly\"-->\n  <!--           @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"-->\n  <!--    >-->\n  <!--    <div class=\"text-center p-10 absolute top-0 right-0 left-0 m-auto\"-->\n  <!--         :class=\"{'text-gray-400':readonly}\">-->\n  <!--      {{ modelValue ? modelValue : label }}-->\n  <!--    </div>-->\n  <!--  </div>-->\n\n  <div class=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\"\n       :class=\"{'text-gray-400':readonly}\"\n  >\n    <div class=\"space-y-1 text-center\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\"\n           aria-hidden=\"true\">\n        <path\n          d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n          stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      <div class=\"flex text-sm text-gray-600\">\n        <label :for=\"uid\"\n               class=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\">\n          <span>Upload a file</span>\n          <input id=\"uid\" name=\"file-upload\" type=\"file\"\n                 class=\"sr-only\"\n                 :readonly=\"readonly\"\n                 :disabled=\"readonly\"\n                 @input=\"$emit('update:modelValue', $event.target.value)\" :value=\"modelValue\"\n          />\n        </label>\n        <p class=\"pl-1\">or drag and drop</p>\n      </div>\n      <p class=\"text-xs text-gray-500\">\n        PNG, JPG, GIF up to 10MB\n      </p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"lxFileInput\",\n  props: {\n    modelValue: String,\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator:  (value:string)=> {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator:  (value:string)=> {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  emits: ['update:modelValue'],\n  data() {\n    return ({\n      uid: this.genUid(),\n    })\n  },\n  methods:{\n    getCss():string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid():string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"input-group\" :class=\"getCss()\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" :class=\"labelClass\">{{ label }}</label>\n    </template>\n    <div class=\"input-container\">\n      <!--      class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"-->\n      <!--suppress HtmlFormInputWithoutLabel -->\n      <textarea\n        class=\"shadow-sm focus:outline-none focus:shadow-outline py-2 px-3 mt-1 block w-full sm:text-sm border rounded-md text-gray-700\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n        :readonly=\"readonly\"\n      >{{ modelValue }}</textarea>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"lxTextareaInput\",\n  props: {\n    modelValue: String,\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  emits: ['update:modelValue'],\n  data() {\n    return ({\n      uid: this.genUid(),\n    })\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"input-group\" :class=\"getCss()\">\n    <template v-if=\"emptyLabel || label\">\n      <label :for=\"uid\" :class=\"labelClass\">{{ label }}</label>\n    </template>\n    <div class=\"input-container\">\n      <!--      class=\"shadow-sm border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"-->\n      <!--suppress HtmlFormInputWithoutLabel -->\n      <textarea\n        class=\"shadow-sm focus:outline-none focus:shadow-outline py-2 px-3 mt-1 block w-full sm:text-sm border rounded-md text-gray-700\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n        :readonly=\"readonly\"\n      >{{ modelValue }}</textarea>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"lxTextareaInput\",\n  props: {\n    modelValue: String,\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  emits: ['update:modelValue'],\n  data() {\n    return ({\n      uid: this.genUid(),\n    })\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <span class=\"badge\" :class=\"getCss()\">\n    <slot></slot>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"lxBadge\",\n  props: {\n    styl: {\n      type: String,\n      validator: (value: string) => {\n        return ['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light'].indexOf(value) !== -1\n      },\n      default: 'primary',\n    },\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(`badge-${this.styl}`)\n      return css.join(' ')\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <span class=\"badge\" :class=\"getCss()\">\n    <slot></slot>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"lxBadge\",\n  props: {\n    styl: {\n      type: String,\n      validator: (value: string) => {\n        return ['primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark', 'light'].indexOf(value) !== -1\n      },\n      default: 'primary',\n    },\n  },\n  methods: {\n    getCss() {\n      const css = []\n      css.push(`badge-${this.styl}`)\n      return css.join(' ')\n    },\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"lg:flex lg:items-center lg:justify-between mb-5\">\n    <div class=\"flex-1 min-w-0\">\n      <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n        {{ title }}\n      </h2>\n      <template v-if=\"!!$slots.subheader\">\n        <slot name=\"subheader\">\n          <div class=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/briefcase &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--            <path-->\n            <!--              d=\"M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\"/>-->\n            <!--          </svg>-->\n            <!--          Full-time-->\n            <!--        </div>-->\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/location-marker &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--          </svg>-->\n            <!--          Remote-->\n            <!--        </div>-->\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/currency-dollar &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path-->\n            <!--              d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/>-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--          </svg>-->\n            <!--          $120k &ndash; $140k-->\n            <!--        </div>-->\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/calendar &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--          </svg>-->\n            <!--          Closing on January 9, 2020-->\n            <!--        </div>-->\n          </div>\n        </slot>\n      </template>\n    </div>\n\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxPageTitle\",\n  props: {\n    title: String,\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div class=\"lg:flex lg:items-center lg:justify-between mb-5\">\n    <div class=\"flex-1 min-w-0\">\n      <h2 class=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n        {{ title }}\n      </h2>\n      <template v-if=\"!!$slots.subheader\">\n        <slot name=\"subheader\">\n          <div class=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/briefcase &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--            <path-->\n            <!--              d=\"M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z\"/>-->\n            <!--          </svg>-->\n            <!--          Full-time-->\n            <!--        </div>-->\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/location-marker &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--          </svg>-->\n            <!--          Remote-->\n            <!--        </div>-->\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/currency-dollar &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path-->\n            <!--              d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\"/>-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--          </svg>-->\n            <!--          $120k &ndash; $140k-->\n            <!--        </div>-->\n            <!--        <div class=\"mt-2 flex items-center text-sm text-gray-500\">-->\n            <!--          &lt;!&ndash; Heroicon name: solid/calendar &ndash;&gt;-->\n            <!--          <svg class=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"-->\n            <!--               fill=\"currentColor\" aria-hidden=\"true\">-->\n            <!--            <path fill-rule=\"evenodd\"-->\n            <!--                  d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"-->\n            <!--                  clip-rule=\"evenodd\"/>-->\n            <!--          </svg>-->\n            <!--          Closing on January 9, 2020-->\n            <!--        </div>-->\n          </div>\n        </slot>\n      </template>\n    </div>\n\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxPageTitle\",\n  props: {\n    title: String,\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n\n  <input type=\"checkbox\" class=\"form-checkbox h-5 w-5 text-red-600\" :id=\"uid\"\n         @change=\"onStateChange\" :checked=\"modelValue\">\n\n  <label class=\"inline-flex items-center\" :for=\"uid\">\n    <span class=\"ml-2 text-gray-700\">{{ label }}</span>\n\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxCheckbox\",\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: {type: Boolean, default: false},\n    value: {type: String},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      uid: this.genUid(),\n      checked: this.modelValue\n    })\n  },\n  methods: {\n    onStateChange(e: any) {\n      this.$emit('update:modelValue', e.target.checked)\n    },\n    getCss() {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n\n  <input type=\"checkbox\" class=\"form-checkbox h-5 w-5 text-red-600\" :id=\"uid\"\n         @change=\"onStateChange\" :checked=\"modelValue\">\n\n  <label class=\"inline-flex items-center\" :for=\"uid\">\n    <span class=\"ml-2 text-gray-700\">{{ label }}</span>\n\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxCheckbox\",\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: {type: Boolean, default: false},\n    value: {type: String},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      uid: this.genUid(),\n      checked: this.modelValue\n    })\n  },\n  methods: {\n    onStateChange(e: any) {\n      this.$emit('update:modelValue', e.target.checked)\n    },\n    getCss() {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid() {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n\n})\n</script>\n\n<style scoped>\n\n</style>\n","<!--suppress HtmlUnknownTag -->\n<template>\n  <label :for=\"uid\" class=\"flex items-center cursor-pointer\">\n    <div class=\"pr-2\">{{ label }}</div>\n    <!-- toggle -->\n    <div class=\"relative\">\n      <input :id=\"uid\" type=\"checkbox\" class=\"hidden\"\n             @change=\"$emit('update:modelValue', $event.target.checked)\" :checked=\"!!modelValue\"\n      />\n      <span class=\"absolute font-medium text-xs uppercase right-1 top-1.5\">\n      {{ textFalse }}\n    </span>\n      <span class=\"absolute font-medium text-xs uppercase right-8 top-1.5 text-white\">\n      {{ textTrue }}\n    </span>\n\n      <!-- path -->\n      <div\n        class=\"toggle-path bg-gray-200 w-14 h-7 rounded-full shadow-inner transition bg-gray-200 duration-300 ease-in-out\"></div>\n\n      <!-- crcle -->\n      <div\n        class=\"toggle-circle absolute w-7 h-7 bg-gray-200 rounded-full shadow inset-y-0 left-0 transition-all duration-300 ease-in-out\"></div>\n\n    </div>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxToggle\",\n  emits: ['update:modelValue'],\n  // mixins: [inputMixin],\n  props: {\n    modelValue: Boolean,\n    textTrue: {type: String, default: 'ON'},\n    textFalse: {type: String, default: 'OFF'},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      uid: this.genUid(),\n    })\n  },\n  methods: {\n    getCss(): string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid(): string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n})\n</script>\n\n<style scoped>\n\ninput:checked ~ .toggle-circle {\n  transform: translateX(100%);\n}\n\ninput:checked ~ .toggle-path {\n  @apply bg-blue-500;\n}\n</style>\n","<!--suppress HtmlUnknownTag -->\n<template>\n  <label :for=\"uid\" class=\"flex items-center cursor-pointer\">\n    <div class=\"pr-2\">{{ label }}</div>\n    <!-- toggle -->\n    <div class=\"relative\">\n      <input :id=\"uid\" type=\"checkbox\" class=\"hidden\"\n             @change=\"$emit('update:modelValue', $event.target.checked)\" :checked=\"!!modelValue\"\n      />\n      <span class=\"absolute font-medium text-xs uppercase right-1 top-1.5\">\n      {{ textFalse }}\n    </span>\n      <span class=\"absolute font-medium text-xs uppercase right-8 top-1.5 text-white\">\n      {{ textTrue }}\n    </span>\n\n      <!-- path -->\n      <div\n        class=\"toggle-path bg-gray-200 w-14 h-7 rounded-full shadow-inner transition bg-gray-200 duration-300 ease-in-out\"></div>\n\n      <!-- crcle -->\n      <div\n        class=\"toggle-circle absolute w-7 h-7 bg-gray-200 rounded-full shadow inset-y-0 left-0 transition-all duration-300 ease-in-out\"></div>\n\n    </div>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxToggle\",\n  emits: ['update:modelValue'],\n  // mixins: [inputMixin],\n  props: {\n    modelValue: Boolean,\n    textTrue: {type: String, default: 'ON'},\n    textFalse: {type: String, default: 'OFF'},\n    label: {type: String, default: ''},\n    emptyLabel: {type: Boolean, default: false},\n    readonly: {type: Boolean, default: false},\n    placeholder: {type: String, default: ''},\n    labelSize: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg', 'xl'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n    size: {\n      type: String,\n      validator: (value: string) => {\n        return ['', 'sm', 'lg'].indexOf(value) !== -1\n      },\n      default: ''\n    },\n  },\n  data() {\n    return ({\n      uid: this.genUid(),\n    })\n  },\n  methods: {\n    getCss(): string {\n      const css = []\n      css.push(this.readonly ? 'readonly' : '')\n      css.push(this.size ? `input-group-${this.size}` : '')\n      return css.join(' ')\n    },\n    genUid(): string {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    }\n  },\n  computed: {\n    hasAppend(): boolean {\n      // @ts-ignore\n      return this.$slots['append']\n    },\n    hasPrepend(): boolean {\n      // @ts-ignore\n      return this.$slots['prepend']\n    },\n    labelClass() {\n      let val: string[] = [];\n      val.push(this.labelSize)\n\n      if (this.label) {\n        val.push('has-text')\n      }\n      return val.join(' ')\n    },\n  },\n})\n</script>\n\n<style scoped>\n\ninput:checked ~ .toggle-circle {\n  transform: translateX(100%);\n}\n\ninput:checked ~ .toggle-path {\n  @apply bg-blue-500;\n}\n</style>\n","<template>\n  <div\n    class=\"main-modal fixed w-full h-100 inset-0 z-50 overflow-hidden flex justify-center items-center animated fadeIn faster\"\n    style=\"background: rgba(0,0,0,.7);\" v-show=\"show\" @click=\"$emit('close')\">\n    <div class=\"md:w-1/3 sm:w-full rounded-lg shadow-lg bg-white my-3\">\n      <div class=\"flex justify-between border-b border-gray-100 px-5 py-4\">\n        <div class=\"flex\">\n\n          <!--        Info -->\n          <template v-if=\"typ === 'info'\">\n            <svg class=\"w-6 mr-2 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                 stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n            </svg>\n          </template>\n\n          <!--        Warning -->\n          <template v-if=\"typ === 'warning'\">\n            <svg class=\"w-6 mr-2 text-yellow-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                 stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n            </svg>\n          </template>\n\n          <!--        Error -->\n          <template v-if=\"typ === 'error'\">\n            <svg class=\"w-6 mr-2 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                 stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n            </svg>\n\n          </template>\n\n          <span class=\"font-bold text-gray-700 text-lg\">{{ the_title }}</span>\n\n        </div>\n        <div>\n          <button @click=\"$emit('close')\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\n                 class=\"w-4 h-4 text-red-500 hover:text-red-600 transition duration-150\">\n              <path fill=\"currentColor\"\n                    d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\n                    class=\"\"></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"px-10 py-5 text-gray-600\">\n        <slot></slot>\n      </div>\n\n      <div class=\"px-5 py-4 flex justify-end\">\n        <template v-if=\"yesNo\">\n          <lx-button typ=\"flat\" @click=\"$emit('okay')\">\n            Yes\n          </lx-button>\n        </template>\n\n        <lx-button typ=\"flat\" @click=\"$emit('close')\">\n          <template v-if=\"yesNo\">\n            No\n          </template>\n          <template v-else>\n            Close\n          </template>\n        </lx-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxModal\",\n  emits: ['close', 'okay'],\n  props: {\n    typ: {\n      type: String,\n      default: 'info',\n      validator: (value:string) => {\n        return ['info', 'warning', 'error'].indexOf(value) !== -1\n      },\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    yesNo: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    the_title():string {\n      if (!this.title) {\n        switch (this.typ) {\n          case 'info':\n            return 'Information'\n          case 'warning':\n            return 'Warning'\n          case 'error':\n            return 'Error'\n          default:\n            return ''\n        }\n      }\n      return this.title\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n  <div\n    class=\"main-modal fixed w-full h-100 inset-0 z-50 overflow-hidden flex justify-center items-center animated fadeIn faster\"\n    style=\"background: rgba(0,0,0,.7);\" v-show=\"show\" @click=\"$emit('close')\">\n    <div class=\"md:w-1/3 sm:w-full rounded-lg shadow-lg bg-white my-3\">\n      <div class=\"flex justify-between border-b border-gray-100 px-5 py-4\">\n        <div class=\"flex\">\n\n          <!--        Info -->\n          <template v-if=\"typ === 'info'\">\n            <svg class=\"w-6 mr-2 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                 stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n            </svg>\n          </template>\n\n          <!--        Warning -->\n          <template v-if=\"typ === 'warning'\">\n            <svg class=\"w-6 mr-2 text-yellow-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                 stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n            </svg>\n          </template>\n\n          <!--        Error -->\n          <template v-if=\"typ === 'error'\">\n            <svg class=\"w-6 mr-2 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                 stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n            </svg>\n\n          </template>\n\n          <span class=\"font-bold text-gray-700 text-lg\">{{ the_title }}</span>\n\n        </div>\n        <div>\n          <button @click=\"$emit('close')\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"\n                 class=\"w-4 h-4 text-red-500 hover:text-red-600 transition duration-150\">\n              <path fill=\"currentColor\"\n                    d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\n                    class=\"\"></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"px-10 py-5 text-gray-600\">\n        <slot></slot>\n      </div>\n\n      <div class=\"px-5 py-4 flex justify-end\">\n        <template v-if=\"yesNo\">\n          <lx-button typ=\"flat\" @click=\"$emit('okay')\">\n            Yes\n          </lx-button>\n        </template>\n\n        <lx-button typ=\"flat\" @click=\"$emit('close')\">\n          <template v-if=\"yesNo\">\n            No\n          </template>\n          <template v-else>\n            Close\n          </template>\n        </lx-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent} from \"vue\"\n\nexport default defineComponent({\n  name: \"lxModal\",\n  emits: ['close', 'okay'],\n  props: {\n    typ: {\n      type: String,\n      default: 'info',\n      validator: (value:string) => {\n        return ['info', 'warning', 'error'].indexOf(value) !== -1\n      },\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    yesNo: {\n      type: Boolean,\n      default: false\n    },\n    show: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    the_title():string {\n      if (!this.title) {\n        switch (this.typ) {\n          case 'info':\n            return 'Information'\n          case 'warning':\n            return 'Warning'\n          case 'error':\n            return 'Error'\n          default:\n            return ''\n        }\n      }\n      return this.title\n    }\n  }\n})\n</script>\n\n<style scoped>\n\n</style>\n","import {App, Plugin} from 'vue';\n\n// Import vue components\nimport * as components from '@/lib-components/index';\n\nimport '@/lib-components/styles/index.scss'\n\n// install function executed by Vue.use()\nconst install: Exclude<Plugin['install'], undefined> = function installLexxUiVue3(app: App) {\n  Object.entries(components).forEach(([componentName, component]) => {\n    app.component(componentName, component);\n  });\n};\n\n// Create module definition for Vue.use()\nexport default install;\n\n// To allow individual component use, export components\n// each can be registered via Vue.component()\nexport * from '@/lib-components/index';\n","// iife/cjs usage extends esm default export - so import it all\nimport plugin, * as components from '@/entry.esm';\n\n// Attach named exports directly to plugin. IIFE/CJS will\n// only expose one global var, with component exports exposed as properties of\n// that global var (eg. plugin.component)\ntype NamedExports = Exclude<typeof components, 'default'>;\ntype ExtendedPlugin = typeof plugin & NamedExports;\nObject.entries(components).forEach(([componentName, component]) => {\n  if (componentName !== 'default') {\n    // plugin[componentName] = component;\n    const key = componentName as Exclude<keyof NamedExports, 'default'>;\n    const val = component as Exclude<ExtendedPlugin, typeof plugin>;\n    (plugin as ExtendedPlugin)[key] = val;\n  }\n});\n\nexport default plugin;\n"],"names":["defineComponent","name","props","styl","type","String","validator","value","indexOf","default","typ","outline","Boolean","iconed","disabled","size","to","methods","getCss","css","push","this","join","_ctx","_createBlock","class","_renderSlot","dark","hasHeaderSlot","$slots","header","hasFooterSlot","footer","_hoisted_1","_createVNode","open","data","isSidebarOpen","hasBrandSlot","brand","onToggleSidebar","$emit","emits","watch","val","xmlns","fill","viewBox","stroke","d","onKeydown","innerWidth","tabindex","onClick","_hoisted_2","_hoisted_3","_hoisted_4","href","active","count","Number","firstLetter","text","_a$","el","_a$$el","textContent","charAt","hasSvgSlot","svg","_hoisted_5","_hoisted_6","expanded","sidebarOpen","right","role","checkboxes","Array","checkAll","map","itm","checked","h","title","length","id","key","field","item","_hoisted_7","components","LxButton","total","itemsPerPage","currentPage","prevButtonText","nextButtonText","currentPageSync","onPageClick","num","onChangePage","dif","pageCount","canPrev","canNext","computed","res","Math","ceil","newVal","i","modelValue","readonly","commitTimout","label","labelSize","emptyLabel","placeholder","timer","uid","genUid","colcount","hasAppend","hasPrepend","labelClass","onInput","e","that","clearTimeout","global","setTimeout","bind","random","toString","substr","for","$event","target","lxSelectInputCheckmark","options","multiple","optionTitleField","optionValueField","created","window","addEventListener","stopPropagation","_this","$el","contains","dataset","includes","tagName","parentElement","root","selectedOption","find","_this2","onOptionSelect","onEscape","onArrowUp","onArrowDown","onChoose","getValue","opt","subheader","onStateChange","onChange","textTrue","textFalse","yesNo","show","the_title","style","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","install","app","Object","entries","forEach","componentName","component","plugin"],"mappings":"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"}